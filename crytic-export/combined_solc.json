{"sources": {"/Users/bohendo/Documents/ethconsole/node_modules/@openzeppelin/contracts/GSN/Context.sol": {"AST": {"absolutePath": "node_modules/@openzeppelin/contracts/GSN/Context.sol", "exportedSymbols": {"Context": [660]}, "id": 661, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 639, "literals": ["solidity", "^", "0.7", ".0"], "nodeType": "PragmaDirective", "src": "33:23:0"}, {"abstract": true, "baseContracts": [], "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 660, "linearizedBaseContracts": [660], "name": "Context", "nodeType": "ContractDefinition", "nodes": [{"body": {"id": 647, "nodeType": "Block", "src": "660:34:0", "statements": [{"expression": {"expression": {"id": 644, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "677:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 645, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "677:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "functionReturnParameters": 643, "id": 646, "nodeType": "Return", "src": "670:17:0"}]}, "id": 648, "implemented": true, "kind": "function", "modifiers": [], "name": "_msgSender", "nodeType": "FunctionDefinition", "parameters": {"id": 640, "nodeType": "ParameterList", "parameters": [], "src": "609:2:0"}, "returnParameters": {"id": 643, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 642, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 648, "src": "643:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, "typeName": {"id": 641, "name": "address", "nodeType": "ElementaryTypeName", "src": "643:15:0", "stateMutability": "payable", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "visibility": "internal"}], "src": "642:17:0"}, "scope": 660, "src": "590:104:0", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"body": {"id": 658, "nodeType": "Block", "src": "765:165:0", "statements": [{"expression": {"id": 653, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "775:4:0", "typeDescriptions": {"typeIdentifier": "t_contract$_Context_$660", "typeString": "contract Context"}}, "id": 654, "nodeType": "ExpressionStatement", "src": "775:4:0"}, {"expression": {"expression": {"id": 655, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "915:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 656, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "data", "nodeType": "MemberAccess", "src": "915:8:0", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}}, "functionReturnParameters": 652, "id": 657, "nodeType": "Return", "src": "908:15:0"}]}, "id": 659, "implemented": true, "kind": "function", "modifiers": [], "name": "_msgData", "nodeType": "FunctionDefinition", "parameters": {"id": 649, "nodeType": "ParameterList", "parameters": [], "src": "717:2:0"}, "returnParameters": {"id": 652, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 651, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 659, "src": "751:12:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 650, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "751:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "750:14:0"}, "scope": 660, "src": "700:230:0", "stateMutability": "view", "virtual": true, "visibility": "internal"}], "scope": 661, "src": "558:374:0"}], "src": "33:900:0"}}, "/Users/bohendo/Documents/ethconsole/node_modules/@openzeppelin/contracts/math/SafeMath.sol": {"AST": {"absolutePath": "node_modules/@openzeppelin/contracts/math/SafeMath.sol", "exportedSymbols": {"SafeMath": [856]}, "id": 857, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 662, "literals": ["solidity", "^", "0.7", ".0"], "nodeType": "PragmaDirective", "src": "33:23:1"}, {"abstract": false, "baseContracts": [], "contractDependencies": [], "contractKind": "library", "documentation": {"id": 663, "nodeType": "StructuredDocumentation", "src": "58:563:1", "text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."}, "fullyImplemented": true, "id": 856, "linearizedBaseContracts": [856], "name": "SafeMath", "nodeType": "ContractDefinition", "nodes": [{"body": {"id": 688, "nodeType": "Block", "src": "941:109:1", "statements": [{"assignments": [674], "declarations": [{"constant": false, "id": 674, "mutability": "mutable", "name": "c", "nodeType": "VariableDeclaration", "scope": 688, "src": "951:9:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 673, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "951:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 678, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 677, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 675, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 666, "src": "963:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 676, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 668, "src": "967:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "963:5:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "951:17:1"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 682, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 680, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 674, "src": "986:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 681, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 666, "src": "991:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "986:6:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77", "id": 683, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "994:29:1", "typeDescriptions": {"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a", "typeString": "literal_string \"SafeMath: addition overflow\""}, "value": "SafeMath: addition overflow"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a", "typeString": "literal_string \"SafeMath: addition overflow\""}], "id": 679, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "978:7:1", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 684, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "978:46:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 685, "nodeType": "ExpressionStatement", "src": "978:46:1"}, {"expression": {"id": 686, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 674, "src": "1042:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 672, "id": 687, "nodeType": "Return", "src": "1035:8:1"}]}, "documentation": {"id": 664, "nodeType": "StructuredDocumentation", "src": "645:224:1", "text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."}, "id": 689, "implemented": true, "kind": "function", "modifiers": [], "name": "add", "nodeType": "FunctionDefinition", "parameters": {"id": 669, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 666, "mutability": "mutable", "name": "a", "nodeType": "VariableDeclaration", "scope": 689, "src": "887:9:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 665, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "887:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 668, "mutability": "mutable", "name": "b", "nodeType": "VariableDeclaration", "scope": 689, "src": "898:9:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 667, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "898:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "886:22:1"}, "returnParameters": {"id": 672, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 671, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 689, "src": "932:7:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 670, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "932:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "931:9:1"}, "scope": 856, "src": "874:176:1", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 705, "nodeType": "Block", "src": "1388:67:1", "statements": [{"expression": {"arguments": [{"id": 700, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 692, "src": "1409:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 701, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 694, "src": "1412:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77", "id": 702, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1415:32:1", "typeDescriptions": {"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862", "typeString": "literal_string \"SafeMath: subtraction overflow\""}, "value": "SafeMath: subtraction overflow"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862", "typeString": "literal_string \"SafeMath: subtraction overflow\""}], "id": 699, "name": "sub", "nodeType": "Identifier", "overloadedDeclarations": [706, 734], "referencedDeclaration": 734, "src": "1405:3:1", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"}}, "id": 703, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1405:43:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 698, "id": 704, "nodeType": "Return", "src": "1398:50:1"}]}, "documentation": {"id": 690, "nodeType": "StructuredDocumentation", "src": "1056:260:1", "text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."}, "id": 706, "implemented": true, "kind": "function", "modifiers": [], "name": "sub", "nodeType": "FunctionDefinition", "parameters": {"id": 695, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 692, "mutability": "mutable", "name": "a", "nodeType": "VariableDeclaration", "scope": 706, "src": "1334:9:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 691, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1334:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 694, "mutability": "mutable", "name": "b", "nodeType": "VariableDeclaration", "scope": 706, "src": "1345:9:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 693, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1345:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1333:22:1"}, "returnParameters": {"id": 698, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 697, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 706, "src": "1379:7:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 696, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1379:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1378:9:1"}, "scope": 856, "src": "1321:134:1", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 733, "nodeType": "Block", "src": "1841:92:1", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 721, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 719, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 711, "src": "1859:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"id": 720, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 709, "src": "1864:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1859:6:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"id": 722, "name": "errorMessage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 713, "src": "1867:12:1", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 718, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1851:7:1", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 723, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1851:29:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 724, "nodeType": "ExpressionStatement", "src": "1851:29:1"}, {"assignments": [726], "declarations": [{"constant": false, "id": 726, "mutability": "mutable", "name": "c", "nodeType": "VariableDeclaration", "scope": 733, "src": "1890:9:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 725, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1890:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 730, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 729, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 727, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 709, "src": "1902:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 728, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 711, "src": "1906:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1902:5:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "1890:17:1"}, {"expression": {"id": 731, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 726, "src": "1925:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 717, "id": 732, "nodeType": "Return", "src": "1918:8:1"}]}, "documentation": {"id": 707, "nodeType": "StructuredDocumentation", "src": "1461:280:1", "text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."}, "id": 734, "implemented": true, "kind": "function", "modifiers": [], "name": "sub", "nodeType": "FunctionDefinition", "parameters": {"id": 714, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 709, "mutability": "mutable", "name": "a", "nodeType": "VariableDeclaration", "scope": 734, "src": "1759:9:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 708, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1759:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 711, "mutability": "mutable", "name": "b", "nodeType": "VariableDeclaration", "scope": 734, "src": "1770:9:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 710, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1770:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 713, "mutability": "mutable", "name": "errorMessage", "nodeType": "VariableDeclaration", "scope": 734, "src": "1781:26:1", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 712, "name": "string", "nodeType": "ElementaryTypeName", "src": "1781:6:1", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "1758:50:1"}, "returnParameters": {"id": 717, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 716, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 734, "src": "1832:7:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 715, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1832:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1831:9:1"}, "scope": 856, "src": "1746:187:1", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 768, "nodeType": "Block", "src": "2247:392:1", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 746, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 744, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 737, "src": "2479:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 745, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2484:1:1", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "2479:6:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 750, "nodeType": "IfStatement", "src": "2475:45:1", "trueBody": {"id": 749, "nodeType": "Block", "src": "2487:33:1", "statements": [{"expression": {"hexValue": "30", "id": 747, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2508:1:1", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "functionReturnParameters": 743, "id": 748, "nodeType": "Return", "src": "2501:8:1"}]}}, {"assignments": [752], "declarations": [{"constant": false, "id": 752, "mutability": "mutable", "name": "c", "nodeType": "VariableDeclaration", "scope": 768, "src": "2530:9:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 751, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2530:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 756, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 755, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 753, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 737, "src": "2542:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 754, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 739, "src": "2546:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2542:5:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "2530:17:1"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 762, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 760, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 758, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 752, "src": "2565:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"id": 759, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 737, "src": "2569:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2565:5:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 761, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 739, "src": "2574:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2565:10:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77", "id": 763, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2577:35:1", "typeDescriptions": {"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3", "typeString": "literal_string \"SafeMath: multiplication overflow\""}, "value": "SafeMath: multiplication overflow"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3", "typeString": "literal_string \"SafeMath: multiplication overflow\""}], "id": 757, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2557:7:1", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 764, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2557:56:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 765, "nodeType": "ExpressionStatement", "src": "2557:56:1"}, {"expression": {"id": 766, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 752, "src": "2631:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 743, "id": 767, "nodeType": "Return", "src": "2624:8:1"}]}, "documentation": {"id": 735, "nodeType": "StructuredDocumentation", "src": "1939:236:1", "text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."}, "id": 769, "implemented": true, "kind": "function", "modifiers": [], "name": "mul", "nodeType": "FunctionDefinition", "parameters": {"id": 740, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 737, "mutability": "mutable", "name": "a", "nodeType": "VariableDeclaration", "scope": 769, "src": "2193:9:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 736, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2193:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 739, "mutability": "mutable", "name": "b", "nodeType": "VariableDeclaration", "scope": 769, "src": "2204:9:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 738, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2204:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2192:22:1"}, "returnParameters": {"id": 743, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 742, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 769, "src": "2238:7:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 741, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2238:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2237:9:1"}, "scope": 856, "src": "2180:459:1", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 785, "nodeType": "Block", "src": "3168:63:1", "statements": [{"expression": {"arguments": [{"id": 780, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 772, "src": "3189:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 781, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 774, "src": "3192:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f", "id": 782, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3195:28:1", "typeDescriptions": {"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f", "typeString": "literal_string \"SafeMath: division by zero\""}, "value": "SafeMath: division by zero"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f", "typeString": "literal_string \"SafeMath: division by zero\""}], "id": 779, "name": "div", "nodeType": "Identifier", "overloadedDeclarations": [786, 814], "referencedDeclaration": 814, "src": "3185:3:1", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"}}, "id": 783, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3185:39:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 778, "id": 784, "nodeType": "Return", "src": "3178:46:1"}]}, "documentation": {"id": 770, "nodeType": "StructuredDocumentation", "src": "2645:451:1", "text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."}, "id": 786, "implemented": true, "kind": "function", "modifiers": [], "name": "div", "nodeType": "FunctionDefinition", "parameters": {"id": 775, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 772, "mutability": "mutable", "name": "a", "nodeType": "VariableDeclaration", "scope": 786, "src": "3114:9:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 771, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3114:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 774, "mutability": "mutable", "name": "b", "nodeType": "VariableDeclaration", "scope": 786, "src": "3125:9:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 773, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3125:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3113:22:1"}, "returnParameters": {"id": 778, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 777, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 786, "src": "3159:7:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 776, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3159:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3158:9:1"}, "scope": 856, "src": "3101:130:1", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 813, "nodeType": "Block", "src": "3808:177:1", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 801, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 799, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 791, "src": "3826:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 800, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3830:1:1", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "3826:5:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"id": 802, "name": "errorMessage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 793, "src": "3833:12:1", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 798, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3818:7:1", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 803, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3818:28:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 804, "nodeType": "ExpressionStatement", "src": "3818:28:1"}, {"assignments": [806], "declarations": [{"constant": false, "id": 806, "mutability": "mutable", "name": "c", "nodeType": "VariableDeclaration", "scope": 813, "src": "3856:9:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 805, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3856:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 810, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 809, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 807, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 789, "src": "3868:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"id": 808, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 791, "src": "3872:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3868:5:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "3856:17:1"}, {"expression": {"id": 811, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 806, "src": "3977:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 797, "id": 812, "nodeType": "Return", "src": "3970:8:1"}]}, "documentation": {"id": 787, "nodeType": "StructuredDocumentation", "src": "3237:471:1", "text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."}, "id": 814, "implemented": true, "kind": "function", "modifiers": [], "name": "div", "nodeType": "FunctionDefinition", "parameters": {"id": 794, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 789, "mutability": "mutable", "name": "a", "nodeType": "VariableDeclaration", "scope": 814, "src": "3726:9:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 788, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3726:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 791, "mutability": "mutable", "name": "b", "nodeType": "VariableDeclaration", "scope": 814, "src": "3737:9:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 790, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3737:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 793, "mutability": "mutable", "name": "errorMessage", "nodeType": "VariableDeclaration", "scope": 814, "src": "3748:26:1", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 792, "name": "string", "nodeType": "ElementaryTypeName", "src": "3748:6:1", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "3725:50:1"}, "returnParameters": {"id": 797, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 796, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 814, "src": "3799:7:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 795, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3799:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3798:9:1"}, "scope": 856, "src": "3713:272:1", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 830, "nodeType": "Block", "src": "4503:61:1", "statements": [{"expression": {"arguments": [{"id": 825, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 817, "src": "4524:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 826, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 819, "src": "4527:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f", "id": 827, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4530:26:1", "typeDescriptions": {"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832", "typeString": "literal_string \"SafeMath: modulo by zero\""}, "value": "SafeMath: modulo by zero"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832", "typeString": "literal_string \"SafeMath: modulo by zero\""}], "id": 824, "name": "mod", "nodeType": "Identifier", "overloadedDeclarations": [831, 855], "referencedDeclaration": 855, "src": "4520:3:1", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"}}, "id": 828, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4520:37:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 823, "id": 829, "nodeType": "Return", "src": "4513:44:1"}]}, "documentation": {"id": 815, "nodeType": "StructuredDocumentation", "src": "3991:440:1", "text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."}, "id": 831, "implemented": true, "kind": "function", "modifiers": [], "name": "mod", "nodeType": "FunctionDefinition", "parameters": {"id": 820, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 817, "mutability": "mutable", "name": "a", "nodeType": "VariableDeclaration", "scope": 831, "src": "4449:9:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 816, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4449:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 819, "mutability": "mutable", "name": "b", "nodeType": "VariableDeclaration", "scope": 831, "src": "4460:9:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 818, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4460:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4448:22:1"}, "returnParameters": {"id": 823, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 822, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 831, "src": "4494:7:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 821, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4494:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4493:9:1"}, "scope": 856, "src": "4436:128:1", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 854, "nodeType": "Block", "src": "5130:68:1", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 846, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 844, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 836, "src": "5148:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "30", "id": 845, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5153:1:1", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "5148:6:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"id": 847, "name": "errorMessage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 838, "src": "5156:12:1", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 843, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5140:7:1", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 848, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5140:29:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 849, "nodeType": "ExpressionStatement", "src": "5140:29:1"}, {"expression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 852, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 850, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 834, "src": "5186:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "%", "rightExpression": {"id": 851, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 836, "src": "5190:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5186:5:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 842, "id": 853, "nodeType": "Return", "src": "5179:12:1"}]}, "documentation": {"id": 832, "nodeType": "StructuredDocumentation", "src": "4570:460:1", "text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."}, "id": 855, "implemented": true, "kind": "function", "modifiers": [], "name": "mod", "nodeType": "FunctionDefinition", "parameters": {"id": 839, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 834, "mutability": "mutable", "name": "a", "nodeType": "VariableDeclaration", "scope": 855, "src": "5048:9:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 833, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5048:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 836, "mutability": "mutable", "name": "b", "nodeType": "VariableDeclaration", "scope": 855, "src": "5059:9:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 835, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5059:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 838, "mutability": "mutable", "name": "errorMessage", "nodeType": "VariableDeclaration", "scope": 855, "src": "5070:26:1", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 837, "name": "string", "nodeType": "ElementaryTypeName", "src": "5070:6:1", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "5047:50:1"}, "returnParameters": {"id": 842, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 841, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 855, "src": "5121:7:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 840, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5121:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5120:9:1"}, "scope": 856, "src": "5035:163:1", "stateMutability": "pure", "virtual": false, "visibility": "internal"}], "scope": 857, "src": "622:4578:1"}], "src": "33:5168:1"}}, "/Users/bohendo/Documents/ethconsole/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {"AST": {"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol", "exportedSymbols": {"Address": [1138], "Context": [660], "ERC20": [637], "IERC20": [934], "SafeMath": [856]}, "id": 638, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 132, "literals": ["solidity", "^", "0.7", ".0"], "nodeType": "PragmaDirective", "src": "33:23:2"}, {"absolutePath": "node_modules/@openzeppelin/contracts/GSN/Context.sol", "file": "../../GSN/Context.sol", "id": 133, "nodeType": "ImportDirective", "scope": 638, "sourceUnit": 661, "src": "58:31:2", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol", "file": "./IERC20.sol", "id": 134, "nodeType": "ImportDirective", "scope": 638, "sourceUnit": 935, "src": "90:22:2", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "node_modules/@openzeppelin/contracts/math/SafeMath.sol", "file": "../../math/SafeMath.sol", "id": 135, "nodeType": "ImportDirective", "scope": 638, "sourceUnit": 857, "src": "113:33:2", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol", "file": "../../utils/Address.sol", "id": 136, "nodeType": "ImportDirective", "scope": 638, "sourceUnit": 1139, "src": "147:33:2", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 138, "name": "Context", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 660, "src": "1363:7:2", "typeDescriptions": {"typeIdentifier": "t_contract$_Context_$660", "typeString": "contract Context"}}, "id": 139, "nodeType": "InheritanceSpecifier", "src": "1363:7:2"}, {"baseName": {"id": 140, "name": "IERC20", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 934, "src": "1372:6:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$934", "typeString": "contract IERC20"}}, "id": 141, "nodeType": "InheritanceSpecifier", "src": "1372:6:2"}], "contractDependencies": [660, 934], "contractKind": "contract", "documentation": {"id": 137, "nodeType": "StructuredDocumentation", "src": "182:1162:2", "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."}, "fullyImplemented": true, "id": 637, "linearizedBaseContracts": [637, 934, 660], "name": "ERC20", "nodeType": "ContractDefinition", "nodes": [{"id": 144, "libraryName": {"id": 142, "name": "SafeMath", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 856, "src": "1391:8:2", "typeDescriptions": {"typeIdentifier": "t_contract$_SafeMath_$856", "typeString": "library SafeMath"}}, "nodeType": "UsingForDirective", "src": "1385:27:2", "typeName": {"id": 143, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1404:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"id": 147, "libraryName": {"id": 145, "name": "Address", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 1138, "src": "1423:7:2", "typeDescriptions": {"typeIdentifier": "t_contract$_Address_$1138", "typeString": "library Address"}}, "nodeType": "UsingForDirective", "src": "1417:26:2", "typeName": {"id": 146, "name": "address", "nodeType": "ElementaryTypeName", "src": "1435:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}}, {"constant": false, "id": 151, "mutability": "mutable", "name": "_balances", "nodeType": "VariableDeclaration", "scope": 637, "src": "1449:46:2", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "typeName": {"id": 150, "keyType": {"id": 148, "name": "address", "nodeType": "ElementaryTypeName", "src": "1458:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "1449:28:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "valueType": {"id": 149, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1469:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, "visibility": "private"}, {"constant": false, "id": 157, "mutability": "mutable", "name": "_allowances", "nodeType": "VariableDeclaration", "scope": 637, "src": "1502:69:2", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}, "typeName": {"id": 156, "keyType": {"id": 152, "name": "address", "nodeType": "ElementaryTypeName", "src": "1511:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "1502:49:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}, "valueType": {"id": 155, "keyType": {"id": 153, "name": "address", "nodeType": "ElementaryTypeName", "src": "1531:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "1522:28:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "valueType": {"id": 154, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1542:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}}, "visibility": "private"}, {"constant": false, "id": 159, "mutability": "mutable", "name": "_totalSupply", "nodeType": "VariableDeclaration", "scope": 637, "src": "1578:28:2", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 158, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1578:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "private"}, {"constant": false, "id": 161, "mutability": "mutable", "name": "_name", "nodeType": "VariableDeclaration", "scope": 637, "src": "1613:20:2", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string"}, "typeName": {"id": 160, "name": "string", "nodeType": "ElementaryTypeName", "src": "1613:6:2", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "private"}, {"constant": false, "id": 163, "mutability": "mutable", "name": "_symbol", "nodeType": "VariableDeclaration", "scope": 637, "src": "1639:22:2", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string"}, "typeName": {"id": 162, "name": "string", "nodeType": "ElementaryTypeName", "src": "1639:6:2", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "private"}, {"constant": false, "id": 165, "mutability": "mutable", "name": "_decimals", "nodeType": "VariableDeclaration", "scope": 637, "src": "1667:23:2", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 164, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "1667:5:2", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "private"}, {"body": {"id": 185, "nodeType": "Block", "src": "2068:79:2", "statements": [{"expression": {"id": 175, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 173, "name": "_name", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 161, "src": "2078:5:2", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 174, "name": "name", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 168, "src": "2086:4:2", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "2078:12:2", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "id": 176, "nodeType": "ExpressionStatement", "src": "2078:12:2"}, {"expression": {"id": 179, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 177, "name": "_symbol", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 163, "src": "2100:7:2", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 178, "name": "symbol", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 170, "src": "2110:6:2", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "2100:16:2", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "id": 180, "nodeType": "ExpressionStatement", "src": "2100:16:2"}, {"expression": {"id": 183, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 181, "name": "_decimals", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 165, "src": "2126:9:2", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "3138", "id": 182, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2138:2:2", "typeDescriptions": {"typeIdentifier": "t_rational_18_by_1", "typeString": "int_const 18"}, "value": "18"}, "src": "2126:14:2", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "id": 184, "nodeType": "ExpressionStatement", "src": "2126:14:2"}]}, "documentation": {"id": 166, "nodeType": "StructuredDocumentation", "src": "1697:311:2", "text": " @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."}, "id": 186, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 171, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 168, "mutability": "mutable", "name": "name", "nodeType": "VariableDeclaration", "scope": 186, "src": "2026:18:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 167, "name": "string", "nodeType": "ElementaryTypeName", "src": "2026:6:2", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 170, "mutability": "mutable", "name": "symbol", "nodeType": "VariableDeclaration", "scope": 186, "src": "2046:20:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 169, "name": "string", "nodeType": "ElementaryTypeName", "src": "2046:6:2", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "2025:42:2"}, "returnParameters": {"id": 172, "nodeType": "ParameterList", "parameters": [], "src": "2068:0:2"}, "scope": 637, "src": "2013:134:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 194, "nodeType": "Block", "src": "2264:29:2", "statements": [{"expression": {"id": 192, "name": "_name", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 161, "src": "2281:5:2", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "functionReturnParameters": 191, "id": 193, "nodeType": "Return", "src": "2274:12:2"}]}, "documentation": {"id": 187, "nodeType": "StructuredDocumentation", "src": "2153:54:2", "text": " @dev Returns the name of the token."}, "functionSelector": "06fdde03", "id": 195, "implemented": true, "kind": "function", "modifiers": [], "name": "name", "nodeType": "FunctionDefinition", "parameters": {"id": 188, "nodeType": "ParameterList", "parameters": [], "src": "2225:2:2"}, "returnParameters": {"id": 191, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 190, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 195, "src": "2249:13:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 189, "name": "string", "nodeType": "ElementaryTypeName", "src": "2249:6:2", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "2248:15:2"}, "scope": 637, "src": "2212:81:2", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 203, "nodeType": "Block", "src": "2460:31:2", "statements": [{"expression": {"id": 201, "name": "_symbol", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 163, "src": "2477:7:2", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "functionReturnParameters": 200, "id": 202, "nodeType": "Return", "src": "2470:14:2"}]}, "documentation": {"id": 196, "nodeType": "StructuredDocumentation", "src": "2299:102:2", "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."}, "functionSelector": "95d89b41", "id": 204, "implemented": true, "kind": "function", "modifiers": [], "name": "symbol", "nodeType": "FunctionDefinition", "parameters": {"id": 197, "nodeType": "ParameterList", "parameters": [], "src": "2421:2:2"}, "returnParameters": {"id": 200, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 199, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 204, "src": "2445:13:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 198, "name": "string", "nodeType": "ElementaryTypeName", "src": "2445:6:2", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "2444:15:2"}, "scope": 637, "src": "2406:85:2", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 212, "nodeType": "Block", "src": "3162:33:2", "statements": [{"expression": {"id": 210, "name": "_decimals", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 165, "src": "3179:9:2", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "functionReturnParameters": 209, "id": 211, "nodeType": "Return", "src": "3172:16:2"}]}, "documentation": {"id": 205, "nodeType": "StructuredDocumentation", "src": "2497:612:2", "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."}, "functionSelector": "313ce567", "id": 213, "implemented": true, "kind": "function", "modifiers": [], "name": "decimals", "nodeType": "FunctionDefinition", "parameters": {"id": 206, "nodeType": "ParameterList", "parameters": [], "src": "3131:2:2"}, "returnParameters": {"id": 209, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 208, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 213, "src": "3155:5:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 207, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "3155:5:2", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "internal"}], "src": "3154:7:2"}, "scope": 637, "src": "3114:81:2", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"baseFunctions": [865], "body": {"id": 222, "nodeType": "Block", "src": "3317:36:2", "statements": [{"expression": {"id": 220, "name": "_totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 159, "src": "3334:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 219, "id": 221, "nodeType": "Return", "src": "3327:19:2"}]}, "documentation": {"id": 214, "nodeType": "StructuredDocumentation", "src": "3201:49:2", "text": " @dev See {IERC20-totalSupply}."}, "functionSelector": "18160ddd", "id": 223, "implemented": true, "kind": "function", "modifiers": [], "name": "totalSupply", "nodeType": "FunctionDefinition", "overrides": {"id": 216, "nodeType": "OverrideSpecifier", "overrides": [], "src": "3290:8:2"}, "parameters": {"id": 215, "nodeType": "ParameterList", "parameters": [], "src": "3275:2:2"}, "returnParameters": {"id": 219, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 218, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 223, "src": "3308:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 217, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3308:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3307:9:2"}, "scope": 637, "src": "3255:98:2", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"baseFunctions": [873], "body": {"id": 236, "nodeType": "Block", "src": "3486:42:2", "statements": [{"expression": {"baseExpression": {"id": 232, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 151, "src": "3503:9:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 234, "indexExpression": {"id": 233, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 226, "src": "3513:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3503:18:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 231, "id": 235, "nodeType": "Return", "src": "3496:25:2"}]}, "documentation": {"id": 224, "nodeType": "StructuredDocumentation", "src": "3359:47:2", "text": " @dev See {IERC20-balanceOf}."}, "functionSelector": "70a08231", "id": 237, "implemented": true, "kind": "function", "modifiers": [], "name": "balanceOf", "nodeType": "FunctionDefinition", "overrides": {"id": 228, "nodeType": "OverrideSpecifier", "overrides": [], "src": "3459:8:2"}, "parameters": {"id": 227, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 226, "mutability": "mutable", "name": "account", "nodeType": "VariableDeclaration", "scope": 237, "src": "3430:15:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 225, "name": "address", "nodeType": "ElementaryTypeName", "src": "3430:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "3429:17:2"}, "returnParameters": {"id": 231, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 230, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 237, "src": "3477:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 229, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3477:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3476:9:2"}, "scope": 637, "src": "3411:117:2", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"baseFunctions": [883], "body": {"id": 257, "nodeType": "Block", "src": "3823:80:2", "statements": [{"expression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 249, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 648, "src": "3843:10:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$", "typeString": "function () view returns (address payable)"}}, "id": 250, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3843:12:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"id": 251, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 240, "src": "3857:9:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 252, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 242, "src": "3868:6:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 248, "name": "_transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 458, "src": "3833:9:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 253, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3833:42:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 254, "nodeType": "ExpressionStatement", "src": "3833:42:2"}, {"expression": {"hexValue": "74727565", "id": 255, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "3892:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 247, "id": 256, "nodeType": "Return", "src": "3885:11:2"}]}, "documentation": {"id": 238, "nodeType": "StructuredDocumentation", "src": "3534:192:2", "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."}, "functionSelector": "a9059cbb", "id": 258, "implemented": true, "kind": "function", "modifiers": [], "name": "transfer", "nodeType": "FunctionDefinition", "overrides": {"id": 244, "nodeType": "OverrideSpecifier", "overrides": [], "src": "3799:8:2"}, "parameters": {"id": 243, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 240, "mutability": "mutable", "name": "recipient", "nodeType": "VariableDeclaration", "scope": 258, "src": "3749:17:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 239, "name": "address", "nodeType": "ElementaryTypeName", "src": "3749:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 242, "mutability": "mutable", "name": "amount", "nodeType": "VariableDeclaration", "scope": 258, "src": "3768:14:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 241, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3768:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3748:35:2"}, "returnParameters": {"id": 247, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 246, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 258, "src": "3817:4:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 245, "name": "bool", "nodeType": "ElementaryTypeName", "src": "3817:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "3816:6:2"}, "scope": 637, "src": "3731:172:2", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"baseFunctions": [893], "body": {"id": 275, "nodeType": "Block", "src": "4059:51:2", "statements": [{"expression": {"baseExpression": {"baseExpression": {"id": 269, "name": "_allowances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 157, "src": "4076:11:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 271, "indexExpression": {"id": 270, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 261, "src": "4088:5:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4076:18:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 273, "indexExpression": {"id": 272, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 263, "src": "4095:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4076:27:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 268, "id": 274, "nodeType": "Return", "src": "4069:34:2"}]}, "documentation": {"id": 259, "nodeType": "StructuredDocumentation", "src": "3909:47:2", "text": " @dev See {IERC20-allowance}."}, "functionSelector": "dd62ed3e", "id": 276, "implemented": true, "kind": "function", "modifiers": [], "name": "allowance", "nodeType": "FunctionDefinition", "overrides": {"id": 265, "nodeType": "OverrideSpecifier", "overrides": [], "src": "4032:8:2"}, "parameters": {"id": 264, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 261, "mutability": "mutable", "name": "owner", "nodeType": "VariableDeclaration", "scope": 276, "src": "3980:13:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 260, "name": "address", "nodeType": "ElementaryTypeName", "src": "3980:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 263, "mutability": "mutable", "name": "spender", "nodeType": "VariableDeclaration", "scope": 276, "src": "3995:15:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 262, "name": "address", "nodeType": "ElementaryTypeName", "src": "3995:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "3979:32:2"}, "returnParameters": {"id": 268, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 267, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 276, "src": "4050:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 266, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4050:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4049:9:2"}, "scope": 637, "src": "3961:149:2", "stateMutability": "view", "virtual": true, "visibility": "public"}, {"baseFunctions": [903], "body": {"id": 296, "nodeType": "Block", "src": "4337:77:2", "statements": [{"expression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 288, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 648, "src": "4356:10:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$", "typeString": "function () view returns (address payable)"}}, "id": 289, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4356:12:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"id": 290, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 279, "src": "4370:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 291, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 281, "src": "4379:6:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 287, "name": "_approve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 614, "src": "4347:8:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 292, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4347:39:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 293, "nodeType": "ExpressionStatement", "src": "4347:39:2"}, {"expression": {"hexValue": "74727565", "id": 294, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "4403:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 286, "id": 295, "nodeType": "Return", "src": "4396:11:2"}]}, "documentation": {"id": 277, "nodeType": "StructuredDocumentation", "src": "4116:127:2", "text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."}, "functionSelector": "095ea7b3", "id": 297, "implemented": true, "kind": "function", "modifiers": [], "name": "approve", "nodeType": "FunctionDefinition", "overrides": {"id": 283, "nodeType": "OverrideSpecifier", "overrides": [], "src": "4313:8:2"}, "parameters": {"id": 282, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 279, "mutability": "mutable", "name": "spender", "nodeType": "VariableDeclaration", "scope": 297, "src": "4265:15:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 278, "name": "address", "nodeType": "ElementaryTypeName", "src": "4265:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 281, "mutability": "mutable", "name": "amount", "nodeType": "VariableDeclaration", "scope": 297, "src": "4282:14:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 280, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4282:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4264:33:2"}, "returnParameters": {"id": 286, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 285, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 297, "src": "4331:4:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 284, "name": "bool", "nodeType": "ElementaryTypeName", "src": "4331:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "4330:6:2"}, "scope": 637, "src": "4248:166:2", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"baseFunctions": [915], "body": {"id": 334, "nodeType": "Block", "src": "4986:205:2", "statements": [{"expression": {"arguments": [{"id": 311, "name": "sender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 300, "src": "5006:6:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 312, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 302, "src": "5014:9:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 313, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 304, "src": "5025:6:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 310, "name": "_transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 458, "src": "4996:9:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 314, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4996:36:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 315, "nodeType": "ExpressionStatement", "src": "4996:36:2"}, {"expression": {"arguments": [{"id": 317, "name": "sender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 300, "src": "5051:6:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 318, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 648, "src": "5059:10:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$", "typeString": "function () view returns (address payable)"}}, "id": 319, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5059:12:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"arguments": [{"id": 327, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 304, "src": "5111:6:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365", "id": 328, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5119:42:2", "typeDescriptions": {"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330", "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""}, "value": "ERC20: transfer amount exceeds allowance"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330", "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""}], "expression": {"baseExpression": {"baseExpression": {"id": 320, "name": "_allowances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 157, "src": "5073:11:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 322, "indexExpression": {"id": 321, "name": "sender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 300, "src": "5085:6:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5073:19:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 325, "indexExpression": {"arguments": [], "expression": {"argumentTypes": [], "id": 323, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 648, "src": "5093:10:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$", "typeString": "function () view returns (address payable)"}}, "id": 324, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5093:12:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5073:33:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 326, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 734, "src": "5073:37:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"}}, "id": 329, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5073:89:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 316, "name": "_approve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 614, "src": "5042:8:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 330, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5042:121:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 331, "nodeType": "ExpressionStatement", "src": "5042:121:2"}, {"expression": {"hexValue": "74727565", "id": 332, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "5180:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 309, "id": 333, "nodeType": "Return", "src": "5173:11:2"}]}, "documentation": {"id": 298, "nodeType": "StructuredDocumentation", "src": "4420:449:2", "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20};\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."}, "functionSelector": "23b872dd", "id": 335, "implemented": true, "kind": "function", "modifiers": [], "name": "transferFrom", "nodeType": "FunctionDefinition", "overrides": {"id": 306, "nodeType": "OverrideSpecifier", "overrides": [], "src": "4962:8:2"}, "parameters": {"id": 305, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 300, "mutability": "mutable", "name": "sender", "nodeType": "VariableDeclaration", "scope": 335, "src": "4896:14:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 299, "name": "address", "nodeType": "ElementaryTypeName", "src": "4896:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 302, "mutability": "mutable", "name": "recipient", "nodeType": "VariableDeclaration", "scope": 335, "src": "4912:17:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 301, "name": "address", "nodeType": "ElementaryTypeName", "src": "4912:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 304, "mutability": "mutable", "name": "amount", "nodeType": "VariableDeclaration", "scope": 335, "src": "4931:14:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 303, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4931:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4895:51:2"}, "returnParameters": {"id": 309, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 308, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 335, "src": "4980:4:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 307, "name": "bool", "nodeType": "ElementaryTypeName", "src": "4980:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "4979:6:2"}, "scope": 637, "src": "4874:317:2", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"body": {"id": 362, "nodeType": "Block", "src": "5680:121:2", "statements": [{"expression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 346, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 648, "src": "5699:10:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$", "typeString": "function () view returns (address payable)"}}, "id": 347, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5699:12:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"id": 348, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 338, "src": "5713:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"id": 356, "name": "addedValue", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 340, "src": "5761:10:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"baseExpression": {"baseExpression": {"id": 349, "name": "_allowances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 157, "src": "5722:11:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 352, "indexExpression": {"arguments": [], "expression": {"argumentTypes": [], "id": 350, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 648, "src": "5734:10:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$", "typeString": "function () view returns (address payable)"}}, "id": 351, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5734:12:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5722:25:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 354, "indexExpression": {"id": 353, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 338, "src": "5748:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5722:34:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 355, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 689, "src": "5722:38:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 357, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5722:50:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 345, "name": "_approve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 614, "src": "5690:8:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 358, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5690:83:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 359, "nodeType": "ExpressionStatement", "src": "5690:83:2"}, {"expression": {"hexValue": "74727565", "id": 360, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "5790:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 344, "id": 361, "nodeType": "Return", "src": "5783:11:2"}]}, "documentation": {"id": 336, "nodeType": "StructuredDocumentation", "src": "5197:384:2", "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."}, "functionSelector": "39509351", "id": 363, "implemented": true, "kind": "function", "modifiers": [], "name": "increaseAllowance", "nodeType": "FunctionDefinition", "parameters": {"id": 341, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 338, "mutability": "mutable", "name": "spender", "nodeType": "VariableDeclaration", "scope": 363, "src": "5613:15:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 337, "name": "address", "nodeType": "ElementaryTypeName", "src": "5613:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 340, "mutability": "mutable", "name": "addedValue", "nodeType": "VariableDeclaration", "scope": 363, "src": "5630:18:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 339, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5630:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5612:37:2"}, "returnParameters": {"id": 344, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 343, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 363, "src": "5674:4:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 342, "name": "bool", "nodeType": "ElementaryTypeName", "src": "5674:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "5673:6:2"}, "scope": 637, "src": "5586:215:2", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"body": {"id": 391, "nodeType": "Block", "src": "6387:167:2", "statements": [{"expression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 374, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 648, "src": "6406:10:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$", "typeString": "function () view returns (address payable)"}}, "id": 375, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6406:12:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"id": 376, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 366, "src": "6420:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"id": 384, "name": "subtractedValue", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 368, "src": "6468:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f", "id": 385, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6485:39:2", "typeDescriptions": {"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8", "typeString": "literal_string \"ERC20: decreased allowance below zero\""}, "value": "ERC20: decreased allowance below zero"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8", "typeString": "literal_string \"ERC20: decreased allowance below zero\""}], "expression": {"baseExpression": {"baseExpression": {"id": 377, "name": "_allowances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 157, "src": "6429:11:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 380, "indexExpression": {"arguments": [], "expression": {"argumentTypes": [], "id": 378, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 648, "src": "6441:10:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$", "typeString": "function () view returns (address payable)"}}, "id": 379, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6441:12:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6429:25:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 382, "indexExpression": {"id": 381, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 366, "src": "6455:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6429:34:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 383, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 734, "src": "6429:38:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"}}, "id": 386, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6429:96:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 373, "name": "_approve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 614, "src": "6397:8:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 387, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6397:129:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 388, "nodeType": "ExpressionStatement", "src": "6397:129:2"}, {"expression": {"hexValue": "74727565", "id": 389, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "6543:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 372, "id": 390, "nodeType": "Return", "src": "6536:11:2"}]}, "documentation": {"id": 364, "nodeType": "StructuredDocumentation", "src": "5807:476:2", "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."}, "functionSelector": "a457c2d7", "id": 392, "implemented": true, "kind": "function", "modifiers": [], "name": "decreaseAllowance", "nodeType": "FunctionDefinition", "parameters": {"id": 369, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 366, "mutability": "mutable", "name": "spender", "nodeType": "VariableDeclaration", "scope": 392, "src": "6315:15:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 365, "name": "address", "nodeType": "ElementaryTypeName", "src": "6315:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 368, "mutability": "mutable", "name": "subtractedValue", "nodeType": "VariableDeclaration", "scope": 392, "src": "6332:23:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 367, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6332:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6314:42:2"}, "returnParameters": {"id": 372, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 371, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 392, "src": "6381:4:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 370, "name": "bool", "nodeType": "ElementaryTypeName", "src": "6381:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "6380:6:2"}, "scope": 637, "src": "6288:266:2", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"body": {"id": 457, "nodeType": "Block", "src": "7115:443:2", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 408, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 403, "name": "sender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 395, "src": "7133:6:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 406, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7151:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 405, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "7143:7:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 404, "name": "address", "nodeType": "ElementaryTypeName", "src": "7143:7:2", "typeDescriptions": {}}}, "id": 407, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7143:10:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "7133:20:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373", "id": 409, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7155:39:2", "typeDescriptions": {"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea", "typeString": "literal_string \"ERC20: transfer from the zero address\""}, "value": "ERC20: transfer from the zero address"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea", "typeString": "literal_string \"ERC20: transfer from the zero address\""}], "id": 402, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7125:7:2", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 410, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7125:70:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 411, "nodeType": "ExpressionStatement", "src": "7125:70:2"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 418, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 413, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 397, "src": "7213:9:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 416, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7234:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 415, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "7226:7:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 414, "name": "address", "nodeType": "ElementaryTypeName", "src": "7226:7:2", "typeDescriptions": {}}}, "id": 417, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7226:10:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "7213:23:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373", "id": 419, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7238:37:2", "typeDescriptions": {"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f", "typeString": "literal_string \"ERC20: transfer to the zero address\""}, "value": "ERC20: transfer to the zero address"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f", "typeString": "literal_string \"ERC20: transfer to the zero address\""}], "id": 412, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7205:7:2", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 420, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7205:71:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 421, "nodeType": "ExpressionStatement", "src": "7205:71:2"}, {"expression": {"arguments": [{"id": 423, "name": "sender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 395, "src": "7308:6:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 424, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 397, "src": "7316:9:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 425, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 399, "src": "7327:6:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 422, "name": "_beforeTokenTransfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 636, "src": "7287:20:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 426, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7287:47:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 427, "nodeType": "ExpressionStatement", "src": "7287:47:2"}, {"expression": {"id": 438, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 428, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 151, "src": "7345:9:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 430, "indexExpression": {"id": 429, "name": "sender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 395, "src": "7355:6:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "7345:17:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 435, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 399, "src": "7387:6:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365", "id": 436, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7395:40:2", "typeDescriptions": {"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6", "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""}, "value": "ERC20: transfer amount exceeds balance"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6", "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""}], "expression": {"baseExpression": {"id": 431, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 151, "src": "7365:9:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 433, "indexExpression": {"id": 432, "name": "sender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 395, "src": "7375:6:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7365:17:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 434, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 734, "src": "7365:21:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"}}, "id": 437, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7365:71:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7345:91:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 439, "nodeType": "ExpressionStatement", "src": "7345:91:2"}, {"expression": {"id": 449, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 440, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 151, "src": "7446:9:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 442, "indexExpression": {"id": 441, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 397, "src": "7456:9:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "7446:20:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 447, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 399, "src": "7494:6:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"baseExpression": {"id": 443, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 151, "src": "7469:9:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 445, "indexExpression": {"id": 444, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 397, "src": "7479:9:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7469:20:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 446, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 689, "src": "7469:24:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 448, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7469:32:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7446:55:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 450, "nodeType": "ExpressionStatement", "src": "7446:55:2"}, {"eventCall": {"arguments": [{"id": 452, "name": "sender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 395, "src": "7525:6:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 453, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 397, "src": "7533:9:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 454, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 399, "src": "7544:6:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 451, "name": "Transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 924, "src": "7516:8:2", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 455, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7516:35:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 456, "nodeType": "EmitStatement", "src": "7511:40:2"}]}, "documentation": {"id": 393, "nodeType": "StructuredDocumentation", "src": "6560:463:2", "text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."}, "id": 458, "implemented": true, "kind": "function", "modifiers": [], "name": "_transfer", "nodeType": "FunctionDefinition", "parameters": {"id": 400, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 395, "mutability": "mutable", "name": "sender", "nodeType": "VariableDeclaration", "scope": 458, "src": "7047:14:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 394, "name": "address", "nodeType": "ElementaryTypeName", "src": "7047:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 397, "mutability": "mutable", "name": "recipient", "nodeType": "VariableDeclaration", "scope": 458, "src": "7063:17:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 396, "name": "address", "nodeType": "ElementaryTypeName", "src": "7063:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 399, "mutability": "mutable", "name": "amount", "nodeType": "VariableDeclaration", "scope": 458, "src": "7082:14:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 398, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7082:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7046:51:2"}, "returnParameters": {"id": 401, "nodeType": "ParameterList", "parameters": [], "src": "7115:0:2"}, "scope": 637, "src": "7028:530:2", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal"}, {"body": {"id": 512, "nodeType": "Block", "src": "7893:305:2", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 472, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 467, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 461, "src": "7911:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 470, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7930:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 469, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "7922:7:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 468, "name": "address", "nodeType": "ElementaryTypeName", "src": "7922:7:2", "typeDescriptions": {}}}, "id": 471, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7922:10:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "7911:21:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373", "id": 473, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7934:33:2", "typeDescriptions": {"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e", "typeString": "literal_string \"ERC20: mint to the zero address\""}, "value": "ERC20: mint to the zero address"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e", "typeString": "literal_string \"ERC20: mint to the zero address\""}], "id": 466, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7903:7:2", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 474, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7903:65:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 475, "nodeType": "ExpressionStatement", "src": "7903:65:2"}, {"expression": {"arguments": [{"arguments": [{"hexValue": "30", "id": 479, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8008:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 478, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8000:7:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 477, "name": "address", "nodeType": "ElementaryTypeName", "src": "8000:7:2", "typeDescriptions": {}}}, "id": 480, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8000:10:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"id": 481, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 461, "src": "8012:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 482, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 463, "src": "8021:6:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 476, "name": "_beforeTokenTransfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 636, "src": "7979:20:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 483, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7979:49:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 484, "nodeType": "ExpressionStatement", "src": "7979:49:2"}, {"expression": {"id": 490, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 485, "name": "_totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 159, "src": "8039:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 488, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 463, "src": "8071:6:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 486, "name": "_totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 159, "src": "8054:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 487, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 689, "src": "8054:16:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 489, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8054:24:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8039:39:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 491, "nodeType": "ExpressionStatement", "src": "8039:39:2"}, {"expression": {"id": 501, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 492, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 151, "src": "8088:9:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 494, "indexExpression": {"id": 493, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 461, "src": "8098:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "8088:18:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 499, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 463, "src": "8132:6:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"baseExpression": {"id": 495, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 151, "src": "8109:9:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 497, "indexExpression": {"id": 496, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 461, "src": "8119:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "8109:18:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 498, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 689, "src": "8109:22:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 500, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8109:30:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8088:51:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 502, "nodeType": "ExpressionStatement", "src": "8088:51:2"}, {"eventCall": {"arguments": [{"arguments": [{"hexValue": "30", "id": 506, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8171:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 505, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8163:7:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 504, "name": "address", "nodeType": "ElementaryTypeName", "src": "8163:7:2", "typeDescriptions": {}}}, "id": 507, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8163:10:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"id": 508, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 461, "src": "8175:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 509, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 463, "src": "8184:6:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 503, "name": "Transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 924, "src": "8154:8:2", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 510, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8154:37:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 511, "nodeType": "EmitStatement", "src": "8149:42:2"}]}, "documentation": {"id": 459, "nodeType": "StructuredDocumentation", "src": "7564:259:2", "text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."}, "id": 513, "implemented": true, "kind": "function", "modifiers": [], "name": "_mint", "nodeType": "FunctionDefinition", "parameters": {"id": 464, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 461, "mutability": "mutable", "name": "account", "nodeType": "VariableDeclaration", "scope": 513, "src": "7843:15:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 460, "name": "address", "nodeType": "ElementaryTypeName", "src": "7843:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 463, "mutability": "mutable", "name": "amount", "nodeType": "VariableDeclaration", "scope": 513, "src": "7860:14:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 462, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7860:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7842:33:2"}, "returnParameters": {"id": 465, "nodeType": "ParameterList", "parameters": [], "src": "7893:0:2"}, "scope": 637, "src": "7828:370:2", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal"}, {"body": {"id": 568, "nodeType": "Block", "src": "8582:345:2", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 527, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 522, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 516, "src": "8600:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 525, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8619:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 524, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8611:7:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 523, "name": "address", "nodeType": "ElementaryTypeName", "src": "8611:7:2", "typeDescriptions": {}}}, "id": 526, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8611:10:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "8600:21:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373", "id": 528, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "8623:35:2", "typeDescriptions": {"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f", "typeString": "literal_string \"ERC20: burn from the zero address\""}, "value": "ERC20: burn from the zero address"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f", "typeString": "literal_string \"ERC20: burn from the zero address\""}], "id": 521, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "8592:7:2", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 529, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8592:67:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 530, "nodeType": "ExpressionStatement", "src": "8592:67:2"}, {"expression": {"arguments": [{"id": 532, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 516, "src": "8691:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"hexValue": "30", "id": 535, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8708:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 534, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8700:7:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 533, "name": "address", "nodeType": "ElementaryTypeName", "src": "8700:7:2", "typeDescriptions": {}}}, "id": 536, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8700:10:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"id": 537, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 518, "src": "8712:6:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 531, "name": "_beforeTokenTransfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 636, "src": "8670:20:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 538, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8670:49:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 539, "nodeType": "ExpressionStatement", "src": "8670:49:2"}, {"expression": {"id": 550, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 540, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 151, "src": "8730:9:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 542, "indexExpression": {"id": 541, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 516, "src": "8740:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "8730:18:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 547, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 518, "src": "8774:6:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365", "id": 548, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "8782:36:2", "typeDescriptions": {"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd", "typeString": "literal_string \"ERC20: burn amount exceeds balance\""}, "value": "ERC20: burn amount exceeds balance"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd", "typeString": "literal_string \"ERC20: burn amount exceeds balance\""}], "expression": {"baseExpression": {"id": 543, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 151, "src": "8751:9:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 545, "indexExpression": {"id": 544, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 516, "src": "8761:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "8751:18:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 546, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 734, "src": "8751:22:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"}}, "id": 549, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8751:68:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8730:89:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 551, "nodeType": "ExpressionStatement", "src": "8730:89:2"}, {"expression": {"id": 557, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 552, "name": "_totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 159, "src": "8829:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 555, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 518, "src": "8861:6:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 553, "name": "_totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 159, "src": "8844:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 554, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 706, "src": "8844:16:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 556, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8844:24:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8829:39:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 558, "nodeType": "ExpressionStatement", "src": "8829:39:2"}, {"eventCall": {"arguments": [{"id": 560, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 516, "src": "8892:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"hexValue": "30", "id": 563, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8909:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 562, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8901:7:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 561, "name": "address", "nodeType": "ElementaryTypeName", "src": "8901:7:2", "typeDescriptions": {}}}, "id": 564, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8901:10:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"id": 565, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 518, "src": "8913:6:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 559, "name": "Transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 924, "src": "8883:8:2", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 566, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8883:37:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 567, "nodeType": "EmitStatement", "src": "8878:42:2"}]}, "documentation": {"id": 514, "nodeType": "StructuredDocumentation", "src": "8204:308:2", "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."}, "id": 569, "implemented": true, "kind": "function", "modifiers": [], "name": "_burn", "nodeType": "FunctionDefinition", "parameters": {"id": 519, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 516, "mutability": "mutable", "name": "account", "nodeType": "VariableDeclaration", "scope": 569, "src": "8532:15:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 515, "name": "address", "nodeType": "ElementaryTypeName", "src": "8532:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 518, "mutability": "mutable", "name": "amount", "nodeType": "VariableDeclaration", "scope": 569, "src": "8549:14:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 517, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8549:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "8531:33:2"}, "returnParameters": {"id": 520, "nodeType": "ParameterList", "parameters": [], "src": "8582:0:2"}, "scope": 637, "src": "8517:410:2", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal"}, {"body": {"id": 613, "nodeType": "Block", "src": "9433:257:2", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 585, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 580, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 572, "src": "9451:5:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 583, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9468:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 582, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "9460:7:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 581, "name": "address", "nodeType": "ElementaryTypeName", "src": "9460:7:2", "typeDescriptions": {}}}, "id": 584, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9460:10:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "9451:19:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373", "id": 586, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "9472:38:2", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208", "typeString": "literal_string \"ERC20: approve from the zero address\""}, "value": "ERC20: approve from the zero address"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208", "typeString": "literal_string \"ERC20: approve from the zero address\""}], "id": 579, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "9443:7:2", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 587, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9443:68:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 588, "nodeType": "ExpressionStatement", "src": "9443:68:2"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 595, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 590, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 574, "src": "9529:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 593, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9548:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 592, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "9540:7:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 591, "name": "address", "nodeType": "ElementaryTypeName", "src": "9540:7:2", "typeDescriptions": {}}}, "id": 594, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9540:10:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "9529:21:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373", "id": 596, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "9552:36:2", "typeDescriptions": {"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029", "typeString": "literal_string \"ERC20: approve to the zero address\""}, "value": "ERC20: approve to the zero address"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029", "typeString": "literal_string \"ERC20: approve to the zero address\""}], "id": 589, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "9521:7:2", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 597, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9521:68:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 598, "nodeType": "ExpressionStatement", "src": "9521:68:2"}, {"expression": {"id": 605, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"baseExpression": {"id": 599, "name": "_allowances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 157, "src": "9600:11:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 602, "indexExpression": {"id": 600, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 572, "src": "9612:5:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9600:18:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 603, "indexExpression": {"id": 601, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 574, "src": "9619:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "9600:27:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 604, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 576, "src": "9630:6:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9600:36:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 606, "nodeType": "ExpressionStatement", "src": "9600:36:2"}, {"eventCall": {"arguments": [{"id": 608, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 572, "src": "9660:5:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 609, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 574, "src": "9667:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 610, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 576, "src": "9676:6:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 607, "name": "Approval", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 933, "src": "9651:8:2", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 611, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9651:32:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 612, "nodeType": "EmitStatement", "src": "9646:37:2"}]}, "documentation": {"id": 570, "nodeType": "StructuredDocumentation", "src": "8933:412:2", "text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."}, "id": 614, "implemented": true, "kind": "function", "modifiers": [], "name": "_approve", "nodeType": "FunctionDefinition", "parameters": {"id": 577, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 572, "mutability": "mutable", "name": "owner", "nodeType": "VariableDeclaration", "scope": 614, "src": "9368:13:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 571, "name": "address", "nodeType": "ElementaryTypeName", "src": "9368:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 574, "mutability": "mutable", "name": "spender", "nodeType": "VariableDeclaration", "scope": 614, "src": "9383:15:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 573, "name": "address", "nodeType": "ElementaryTypeName", "src": "9383:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 576, "mutability": "mutable", "name": "amount", "nodeType": "VariableDeclaration", "scope": 614, "src": "9400:14:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 575, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9400:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "9367:48:2"}, "returnParameters": {"id": 578, "nodeType": "ParameterList", "parameters": [], "src": "9433:0:2"}, "scope": 637, "src": "9350:340:2", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal"}, {"body": {"id": 624, "nodeType": "Block", "src": "10063:38:2", "statements": [{"expression": {"id": 622, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 620, "name": "_decimals", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 165, "src": "10073:9:2", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 621, "name": "decimals_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 617, "src": "10085:9:2", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "src": "10073:21:2", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "id": 623, "nodeType": "ExpressionStatement", "src": "10073:21:2"}]}, "documentation": {"id": 615, "nodeType": "StructuredDocumentation", "src": "9696:312:2", "text": " @dev Sets {decimals} to a value other than the default one of 18.\n WARNING: This function should only be called from the constructor. Most\n applications that interact with token contracts will not expect\n {decimals} to ever change, and may work incorrectly if it does."}, "id": 625, "implemented": true, "kind": "function", "modifiers": [], "name": "_setupDecimals", "nodeType": "FunctionDefinition", "parameters": {"id": 618, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 617, "mutability": "mutable", "name": "decimals_", "nodeType": "VariableDeclaration", "scope": 625, "src": "10037:15:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 616, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "10037:5:2", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "internal"}], "src": "10036:17:2"}, "returnParameters": {"id": 619, "nodeType": "ParameterList", "parameters": [], "src": "10063:0:2"}, "scope": 637, "src": "10013:88:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 635, "nodeType": "Block", "src": "10777:3:2", "statements": []}, "documentation": {"id": 626, "nodeType": "StructuredDocumentation", "src": "10107:576:2", "text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."}, "id": 636, "implemented": true, "kind": "function", "modifiers": [], "name": "_beforeTokenTransfer", "nodeType": "FunctionDefinition", "parameters": {"id": 633, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 628, "mutability": "mutable", "name": "from", "nodeType": "VariableDeclaration", "scope": 636, "src": "10718:12:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 627, "name": "address", "nodeType": "ElementaryTypeName", "src": "10718:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 630, "mutability": "mutable", "name": "to", "nodeType": "VariableDeclaration", "scope": 636, "src": "10732:10:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 629, "name": "address", "nodeType": "ElementaryTypeName", "src": "10732:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 632, "mutability": "mutable", "name": "amount", "nodeType": "VariableDeclaration", "scope": 636, "src": "10744:14:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 631, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10744:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "10717:42:2"}, "returnParameters": {"id": 634, "nodeType": "ParameterList", "parameters": [], "src": "10777:0:2"}, "scope": 637, "src": "10688:92:2", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal"}], "scope": 638, "src": "1345:9437:2"}], "src": "33:10750:2"}}, "/Users/bohendo/Documents/ethconsole/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {"AST": {"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol", "exportedSymbols": {"IERC20": [934]}, "id": 935, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 858, "literals": ["solidity", "^", "0.7", ".0"], "nodeType": "PragmaDirective", "src": "33:23:3"}, {"abstract": false, "baseContracts": [], "contractDependencies": [], "contractKind": "interface", "documentation": {"id": 859, "nodeType": "StructuredDocumentation", "src": "58:70:3", "text": " @dev Interface of the ERC20 standard as defined in the EIP."}, "fullyImplemented": false, "id": 934, "linearizedBaseContracts": [934], "name": "IERC20", "nodeType": "ContractDefinition", "nodes": [{"documentation": {"id": 860, "nodeType": "StructuredDocumentation", "src": "152:66:3", "text": " @dev Returns the amount of tokens in existence."}, "functionSelector": "18160ddd", "id": 865, "implemented": false, "kind": "function", "modifiers": [], "name": "totalSupply", "nodeType": "FunctionDefinition", "parameters": {"id": 861, "nodeType": "ParameterList", "parameters": [], "src": "243:2:3"}, "returnParameters": {"id": 864, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 863, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 865, "src": "269:7:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 862, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "269:7:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "268:9:3"}, "scope": 934, "src": "223:55:3", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"documentation": {"id": 866, "nodeType": "StructuredDocumentation", "src": "284:72:3", "text": " @dev Returns the amount of tokens owned by `account`."}, "functionSelector": "70a08231", "id": 873, "implemented": false, "kind": "function", "modifiers": [], "name": "balanceOf", "nodeType": "FunctionDefinition", "parameters": {"id": 869, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 868, "mutability": "mutable", "name": "account", "nodeType": "VariableDeclaration", "scope": 873, "src": "380:15:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 867, "name": "address", "nodeType": "ElementaryTypeName", "src": "380:7:3", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "379:17:3"}, "returnParameters": {"id": 872, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 871, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 873, "src": "420:7:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 870, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "420:7:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "419:9:3"}, "scope": 934, "src": "361:68:3", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"documentation": {"id": 874, "nodeType": "StructuredDocumentation", "src": "435:209:3", "text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."}, "functionSelector": "a9059cbb", "id": 883, "implemented": false, "kind": "function", "modifiers": [], "name": "transfer", "nodeType": "FunctionDefinition", "parameters": {"id": 879, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 876, "mutability": "mutable", "name": "recipient", "nodeType": "VariableDeclaration", "scope": 883, "src": "667:17:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 875, "name": "address", "nodeType": "ElementaryTypeName", "src": "667:7:3", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 878, "mutability": "mutable", "name": "amount", "nodeType": "VariableDeclaration", "scope": 883, "src": "686:14:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 877, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "686:7:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "666:35:3"}, "returnParameters": {"id": 882, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 881, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 883, "src": "720:4:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 880, "name": "bool", "nodeType": "ElementaryTypeName", "src": "720:4:3", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "719:6:3"}, "scope": 934, "src": "649:77:3", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"documentation": {"id": 884, "nodeType": "StructuredDocumentation", "src": "732:264:3", "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."}, "functionSelector": "dd62ed3e", "id": 893, "implemented": false, "kind": "function", "modifiers": [], "name": "allowance", "nodeType": "FunctionDefinition", "parameters": {"id": 889, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 886, "mutability": "mutable", "name": "owner", "nodeType": "VariableDeclaration", "scope": 893, "src": "1020:13:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 885, "name": "address", "nodeType": "ElementaryTypeName", "src": "1020:7:3", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 888, "mutability": "mutable", "name": "spender", "nodeType": "VariableDeclaration", "scope": 893, "src": "1035:15:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 887, "name": "address", "nodeType": "ElementaryTypeName", "src": "1035:7:3", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1019:32:3"}, "returnParameters": {"id": 892, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 891, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 893, "src": "1075:7:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 890, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1075:7:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1074:9:3"}, "scope": 934, "src": "1001:83:3", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"documentation": {"id": 894, "nodeType": "StructuredDocumentation", "src": "1090:642:3", "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."}, "functionSelector": "095ea7b3", "id": 903, "implemented": false, "kind": "function", "modifiers": [], "name": "approve", "nodeType": "FunctionDefinition", "parameters": {"id": 899, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 896, "mutability": "mutable", "name": "spender", "nodeType": "VariableDeclaration", "scope": 903, "src": "1754:15:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 895, "name": "address", "nodeType": "ElementaryTypeName", "src": "1754:7:3", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 898, "mutability": "mutable", "name": "amount", "nodeType": "VariableDeclaration", "scope": 903, "src": "1771:14:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 897, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1771:7:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1753:33:3"}, "returnParameters": {"id": 902, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 901, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 903, "src": "1805:4:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 900, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1805:4:3", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "1804:6:3"}, "scope": 934, "src": "1737:74:3", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"documentation": {"id": 904, "nodeType": "StructuredDocumentation", "src": "1817:296:3", "text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."}, "functionSelector": "23b872dd", "id": 915, "implemented": false, "kind": "function", "modifiers": [], "name": "transferFrom", "nodeType": "FunctionDefinition", "parameters": {"id": 911, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 906, "mutability": "mutable", "name": "sender", "nodeType": "VariableDeclaration", "scope": 915, "src": "2140:14:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 905, "name": "address", "nodeType": "ElementaryTypeName", "src": "2140:7:3", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 908, "mutability": "mutable", "name": "recipient", "nodeType": "VariableDeclaration", "scope": 915, "src": "2156:17:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 907, "name": "address", "nodeType": "ElementaryTypeName", "src": "2156:7:3", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 910, "mutability": "mutable", "name": "amount", "nodeType": "VariableDeclaration", "scope": 915, "src": "2175:14:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 909, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2175:7:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2139:51:3"}, "returnParameters": {"id": 914, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 913, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 915, "src": "2209:4:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 912, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2209:4:3", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "2208:6:3"}, "scope": 934, "src": "2118:97:3", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"anonymous": false, "documentation": {"id": 916, "nodeType": "StructuredDocumentation", "src": "2221:158:3", "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."}, "id": 924, "name": "Transfer", "nodeType": "EventDefinition", "parameters": {"id": 923, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 918, "indexed": true, "mutability": "mutable", "name": "from", "nodeType": "VariableDeclaration", "scope": 924, "src": "2399:20:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 917, "name": "address", "nodeType": "ElementaryTypeName", "src": "2399:7:3", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 920, "indexed": true, "mutability": "mutable", "name": "to", "nodeType": "VariableDeclaration", "scope": 924, "src": "2421:18:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 919, "name": "address", "nodeType": "ElementaryTypeName", "src": "2421:7:3", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 922, "indexed": false, "mutability": "mutable", "name": "value", "nodeType": "VariableDeclaration", "scope": 924, "src": "2441:13:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 921, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2441:7:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2398:57:3"}, "src": "2384:72:3"}, {"anonymous": false, "documentation": {"id": 925, "nodeType": "StructuredDocumentation", "src": "2462:148:3", "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."}, "id": 933, "name": "Approval", "nodeType": "EventDefinition", "parameters": {"id": 932, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 927, "indexed": true, "mutability": "mutable", "name": "owner", "nodeType": "VariableDeclaration", "scope": 933, "src": "2630:21:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 926, "name": "address", "nodeType": "ElementaryTypeName", "src": "2630:7:3", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 929, "indexed": true, "mutability": "mutable", "name": "spender", "nodeType": "VariableDeclaration", "scope": 933, "src": "2653:23:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 928, "name": "address", "nodeType": "ElementaryTypeName", "src": "2653:7:3", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 931, "indexed": false, "mutability": "mutable", "name": "value", "nodeType": "VariableDeclaration", "scope": 933, "src": "2678:13:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 930, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2678:7:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2629:63:3"}, "src": "2615:78:3"}], "scope": 935, "src": "129:2566:3"}], "src": "33:2663:3"}}, "/Users/bohendo/Documents/ethconsole/node_modules/@openzeppelin/contracts/utils/Address.sol": {"AST": {"absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol", "exportedSymbols": {"Address": [1138]}, "id": 1139, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 936, "literals": ["solidity", "^", "0.7", ".0"], "nodeType": "PragmaDirective", "src": "33:23:4"}, {"abstract": false, "baseContracts": [], "contractDependencies": [], "contractKind": "library", "documentation": {"id": 937, "nodeType": "StructuredDocumentation", "src": "58:67:4", "text": " @dev Collection of functions related to the address type"}, "fullyImplemented": true, "id": 1138, "linearizedBaseContracts": [1138], "name": "Address", "nodeType": "ContractDefinition", "nodes": [{"body": {"id": 962, "nodeType": "Block", "src": "784:544:4", "statements": [{"assignments": [946], "declarations": [{"constant": false, "id": 946, "mutability": "mutable", "name": "codehash", "nodeType": "VariableDeclaration", "scope": 962, "src": "1036:16:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 945, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1036:7:4", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 947, "nodeType": "VariableDeclarationStatement", "src": "1036:16:4"}, {"assignments": [949], "declarations": [{"constant": false, "id": 949, "mutability": "mutable", "name": "accountHash", "nodeType": "VariableDeclaration", "scope": 962, "src": "1062:19:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 948, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1062:7:4", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 951, "initialValue": {"hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730", "id": 950, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1084:66:4", "typeDescriptions": {"typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1", "typeString": "int_const 8947...(69 digits omitted)...1552"}, "value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"}, "nodeType": "VariableDeclarationStatement", "src": "1062:88:4"}, {"AST": {"nodeType": "YulBlock", "src": "1225:36:4", "statements": [{"nodeType": "YulAssignment", "src": "1227:32:4", "value": {"arguments": [{"name": "account", "nodeType": "YulIdentifier", "src": "1251:7:4"}], "functionName": {"name": "extcodehash", "nodeType": "YulIdentifier", "src": "1239:11:4"}, "nodeType": "YulFunctionCall", "src": "1239:20:4"}, "variableNames": [{"name": "codehash", "nodeType": "YulIdentifier", "src": "1227:8:4"}]}]}, "evmVersion": "istanbul", "externalReferences": [{"declaration": 940, "isOffset": false, "isSlot": false, "src": "1251:7:4", "valueSize": 1}, {"declaration": 946, "isOffset": false, "isSlot": false, "src": "1227:8:4", "valueSize": 1}], "id": 952, "nodeType": "InlineAssembly", "src": "1216:45:4"}, {"expression": {"components": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 959, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "id": 955, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 953, "name": "codehash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 946, "src": "1278:8:4", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"id": 954, "name": "accountHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 949, "src": "1290:11:4", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "1278:23:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "id": 958, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 956, "name": "codehash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 946, "src": "1305:8:4", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "307830", "id": 957, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1317:3:4", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0x0"}, "src": "1305:15:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "1278:42:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "id": 960, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "1277:44:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 944, "id": 961, "nodeType": "Return", "src": "1270:51:4"}]}, "documentation": {"id": 938, "nodeType": "StructuredDocumentation", "src": "148:565:4", "text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="}, "id": 963, "implemented": true, "kind": "function", "modifiers": [], "name": "isContract", "nodeType": "FunctionDefinition", "parameters": {"id": 941, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 940, "mutability": "mutable", "name": "account", "nodeType": "VariableDeclaration", "scope": 963, "src": "738:15:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 939, "name": "address", "nodeType": "ElementaryTypeName", "src": "738:7:4", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "737:17:4"}, "returnParameters": {"id": 944, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 943, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 963, "src": "778:4:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 942, "name": "bool", "nodeType": "ElementaryTypeName", "src": "778:4:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "777:6:4"}, "scope": 1138, "src": "718:610:4", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 996, "nodeType": "Block", "src": "2316:320:4", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 978, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"arguments": [{"id": 974, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "2342:4:4", "typeDescriptions": {"typeIdentifier": "t_contract$_Address_$1138", "typeString": "library Address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_Address_$1138", "typeString": "library Address"}], "id": 973, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2334:7:4", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 972, "name": "address", "nodeType": "ElementaryTypeName", "src": "2334:7:4", "typeDescriptions": {}}}, "id": 975, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2334:13:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 976, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balance", "nodeType": "MemberAccess", "src": "2334:21:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 977, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 968, "src": "2359:6:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2334:31:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365", "id": 979, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2367:31:4", "typeDescriptions": {"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9", "typeString": "literal_string \"Address: insufficient balance\""}, "value": "Address: insufficient balance"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9", "typeString": "literal_string \"Address: insufficient balance\""}], "id": 971, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2326:7:4", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 980, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2326:73:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 981, "nodeType": "ExpressionStatement", "src": "2326:73:4"}, {"assignments": [983, null], "declarations": [{"constant": false, "id": 983, "mutability": "mutable", "name": "success", "nodeType": "VariableDeclaration", "scope": 996, "src": "2488:12:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 982, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2488:4:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, null], "id": 990, "initialValue": {"arguments": [{"hexValue": "", "id": 988, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2538:2:4", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}, "value": ""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"id": 984, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 966, "src": "2506:9:4", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 985, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "call", "nodeType": "MemberAccess", "src": "2506:14:4", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 987, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "names": ["value"], "nodeType": "FunctionCallOptions", "options": [{"id": 986, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 968, "src": "2529:6:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "src": "2506:31:4", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 989, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2506:35:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "2487:54:4"}, {"expression": {"arguments": [{"id": 992, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 983, "src": "2559:7:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564", "id": 993, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2568:60:4", "typeDescriptions": {"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae", "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""}, "value": "Address: unable to send value, recipient may have reverted"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae", "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""}], "id": 991, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2551:7:4", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 994, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2551:78:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 995, "nodeType": "ExpressionStatement", "src": "2551:78:4"}]}, "documentation": {"id": 964, "nodeType": "StructuredDocumentation", "src": "1334:906:4", "text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."}, "id": 997, "implemented": true, "kind": "function", "modifiers": [], "name": "sendValue", "nodeType": "FunctionDefinition", "parameters": {"id": 969, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 966, "mutability": "mutable", "name": "recipient", "nodeType": "VariableDeclaration", "scope": 997, "src": "2264:25:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, "typeName": {"id": 965, "name": "address", "nodeType": "ElementaryTypeName", "src": "2264:15:4", "stateMutability": "payable", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "visibility": "internal"}, {"constant": false, "id": 968, "mutability": "mutable", "name": "amount", "nodeType": "VariableDeclaration", "scope": 997, "src": "2291:14:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 967, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2291:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2263:43:4"}, "returnParameters": {"id": 970, "nodeType": "ParameterList", "parameters": [], "src": "2316:0:4"}, "scope": 1138, "src": "2245:391:4", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 1013, "nodeType": "Block", "src": "3466:82:4", "statements": [{"expression": {"arguments": [{"id": 1008, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1000, "src": "3494:6:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1009, "name": "data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1002, "src": "3502:4:4", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, {"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564", "id": 1010, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3508:32:4", "typeDescriptions": {"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df", "typeString": "literal_string \"Address: low-level call failed\""}, "value": "Address: low-level call failed"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}, {"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df", "typeString": "literal_string \"Address: low-level call failed\""}], "id": 1007, "name": "functionCall", "nodeType": "Identifier", "overloadedDeclarations": [1014, 1034], "referencedDeclaration": 1034, "src": "3481:12:4", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$", "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"}}, "id": 1011, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3481:60:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "functionReturnParameters": 1006, "id": 1012, "nodeType": "Return", "src": "3474:67:4"}]}, "documentation": {"id": 998, "nodeType": "StructuredDocumentation", "src": "2642:730:4", "text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"}, "id": 1014, "implemented": true, "kind": "function", "modifiers": [], "name": "functionCall", "nodeType": "FunctionDefinition", "parameters": {"id": 1003, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1000, "mutability": "mutable", "name": "target", "nodeType": "VariableDeclaration", "scope": 1014, "src": "3399:14:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 999, "name": "address", "nodeType": "ElementaryTypeName", "src": "3399:7:4", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1002, "mutability": "mutable", "name": "data", "nodeType": "VariableDeclaration", "scope": 1014, "src": "3415:17:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1001, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "3415:5:4", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "3398:35:4"}, "returnParameters": {"id": 1006, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1005, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1014, "src": "3452:12:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1004, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "3452:5:4", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "3451:14:4"}, "scope": 1138, "src": "3377:171:4", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 1033, "nodeType": "Block", "src": "3887:77:4", "statements": [{"expression": {"arguments": [{"id": 1027, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1017, "src": "3927:6:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1028, "name": "data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1019, "src": "3935:4:4", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, {"hexValue": "30", "id": 1029, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3941:1:4", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"id": 1030, "name": "errorMessage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1021, "src": "3944:12:4", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}, {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 1026, "name": "_functionCallWithValue", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1137, "src": "3904:22:4", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$", "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"}}, "id": 1031, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3904:53:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "functionReturnParameters": 1025, "id": 1032, "nodeType": "Return", "src": "3897:60:4"}]}, "documentation": {"id": 1015, "nodeType": "StructuredDocumentation", "src": "3554:211:4", "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"}, "id": 1034, "implemented": true, "kind": "function", "modifiers": [], "name": "functionCall", "nodeType": "FunctionDefinition", "parameters": {"id": 1022, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1017, "mutability": "mutable", "name": "target", "nodeType": "VariableDeclaration", "scope": 1034, "src": "3792:14:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1016, "name": "address", "nodeType": "ElementaryTypeName", "src": "3792:7:4", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1019, "mutability": "mutable", "name": "data", "nodeType": "VariableDeclaration", "scope": 1034, "src": "3808:17:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1018, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "3808:5:4", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}, {"constant": false, "id": 1021, "mutability": "mutable", "name": "errorMessage", "nodeType": "VariableDeclaration", "scope": 1034, "src": "3827:26:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 1020, "name": "string", "nodeType": "ElementaryTypeName", "src": "3827:6:4", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "3791:63:4"}, "returnParameters": {"id": 1025, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1024, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1034, "src": "3873:12:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1023, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "3873:5:4", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "3872:14:4"}, "scope": 1138, "src": "3770:194:4", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 1053, "nodeType": "Block", "src": "4439:111:4", "statements": [{"expression": {"arguments": [{"id": 1047, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1037, "src": "4478:6:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1048, "name": "data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1039, "src": "4486:4:4", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, {"id": 1049, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1041, "src": "4492:5:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564", "id": 1050, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4499:43:4", "typeDescriptions": {"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc", "typeString": "literal_string \"Address: low-level call with value failed\""}, "value": "Address: low-level call with value failed"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc", "typeString": "literal_string \"Address: low-level call with value failed\""}], "id": 1046, "name": "functionCallWithValue", "nodeType": "Identifier", "overloadedDeclarations": [1054, 1087], "referencedDeclaration": 1087, "src": "4456:21:4", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$", "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"}}, "id": 1051, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4456:87:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "functionReturnParameters": 1045, "id": 1052, "nodeType": "Return", "src": "4449:94:4"}]}, "documentation": {"id": 1035, "nodeType": "StructuredDocumentation", "src": "3970:351:4", "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"}, "id": 1054, "implemented": true, "kind": "function", "modifiers": [], "name": "functionCallWithValue", "nodeType": "FunctionDefinition", "parameters": {"id": 1042, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1037, "mutability": "mutable", "name": "target", "nodeType": "VariableDeclaration", "scope": 1054, "src": "4357:14:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1036, "name": "address", "nodeType": "ElementaryTypeName", "src": "4357:7:4", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1039, "mutability": "mutable", "name": "data", "nodeType": "VariableDeclaration", "scope": 1054, "src": "4373:17:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1038, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "4373:5:4", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}, {"constant": false, "id": 1041, "mutability": "mutable", "name": "value", "nodeType": "VariableDeclaration", "scope": 1054, "src": "4392:13:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1040, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4392:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4356:50:4"}, "returnParameters": {"id": 1045, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1044, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1054, "src": "4425:12:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1043, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "4425:5:4", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "4424:14:4"}, "scope": 1138, "src": "4326:224:4", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 1086, "nodeType": "Block", "src": "4939:172:4", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1075, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"arguments": [{"id": 1071, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "4965:4:4", "typeDescriptions": {"typeIdentifier": "t_contract$_Address_$1138", "typeString": "library Address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_Address_$1138", "typeString": "library Address"}], "id": 1070, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4957:7:4", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 1069, "name": "address", "nodeType": "ElementaryTypeName", "src": "4957:7:4", "typeDescriptions": {}}}, "id": 1072, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4957:13:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 1073, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balance", "nodeType": "MemberAccess", "src": "4957:21:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 1074, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1061, "src": "4982:5:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4957:30:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c", "id": 1076, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4989:40:4", "typeDescriptions": {"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c", "typeString": "literal_string \"Address: insufficient balance for call\""}, "value": "Address: insufficient balance for call"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c", "typeString": "literal_string \"Address: insufficient balance for call\""}], "id": 1068, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "4949:7:4", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 1077, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4949:81:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1078, "nodeType": "ExpressionStatement", "src": "4949:81:4"}, {"expression": {"arguments": [{"id": 1080, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1057, "src": "5070:6:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1081, "name": "data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1059, "src": "5078:4:4", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, {"id": 1082, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1061, "src": "5084:5:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1083, "name": "errorMessage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1063, "src": "5091:12:4", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 1079, "name": "_functionCallWithValue", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1137, "src": "5047:22:4", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$", "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"}}, "id": 1084, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5047:57:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "functionReturnParameters": 1067, "id": 1085, "nodeType": "Return", "src": "5040:64:4"}]}, "documentation": {"id": 1055, "nodeType": "StructuredDocumentation", "src": "4556:237:4", "text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"}, "id": 1087, "implemented": true, "kind": "function", "modifiers": [], "name": "functionCallWithValue", "nodeType": "FunctionDefinition", "parameters": {"id": 1064, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1057, "mutability": "mutable", "name": "target", "nodeType": "VariableDeclaration", "scope": 1087, "src": "4829:14:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1056, "name": "address", "nodeType": "ElementaryTypeName", "src": "4829:7:4", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1059, "mutability": "mutable", "name": "data", "nodeType": "VariableDeclaration", "scope": 1087, "src": "4845:17:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1058, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "4845:5:4", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}, {"constant": false, "id": 1061, "mutability": "mutable", "name": "value", "nodeType": "VariableDeclaration", "scope": 1087, "src": "4864:13:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1060, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4864:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1063, "mutability": "mutable", "name": "errorMessage", "nodeType": "VariableDeclaration", "scope": 1087, "src": "4879:26:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 1062, "name": "string", "nodeType": "ElementaryTypeName", "src": "4879:6:4", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "4828:78:4"}, "returnParameters": {"id": 1067, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1066, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1087, "src": "4925:12:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1065, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "4925:5:4", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "4924:14:4"}, "scope": 1138, "src": "4798:313:4", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 1136, "nodeType": "Block", "src": "5261:814:4", "statements": [{"expression": {"arguments": [{"arguments": [{"id": 1102, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1089, "src": "5290:6:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 1101, "name": "isContract", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 963, "src": "5279:10:4", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$", "typeString": "function (address) view returns (bool)"}}, "id": 1103, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5279:18:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374", "id": 1104, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5299:31:4", "typeDescriptions": {"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad", "typeString": "literal_string \"Address: call to non-contract\""}, "value": "Address: call to non-contract"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad", "typeString": "literal_string \"Address: call to non-contract\""}], "id": 1100, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5271:7:4", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 1105, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5271:60:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1106, "nodeType": "ExpressionStatement", "src": "5271:60:4"}, {"assignments": [1108, 1110], "declarations": [{"constant": false, "id": 1108, "mutability": "mutable", "name": "success", "nodeType": "VariableDeclaration", "scope": 1136, "src": "5402:12:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1107, "name": "bool", "nodeType": "ElementaryTypeName", "src": "5402:4:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 1110, "mutability": "mutable", "name": "returndata", "nodeType": "VariableDeclaration", "scope": 1136, "src": "5416:23:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1109, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "5416:5:4", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "id": 1117, "initialValue": {"arguments": [{"id": 1115, "name": "data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1091, "src": "5474:4:4", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "expression": {"id": 1111, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1089, "src": "5443:6:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 1112, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "call", "nodeType": "MemberAccess", "src": "5443:11:4", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 1114, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "names": ["value"], "nodeType": "FunctionCallOptions", "options": [{"id": 1113, "name": "weiValue", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1093, "src": "5463:8:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "src": "5443:30:4", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 1116, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5443:36:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "5401:78:4"}, {"condition": {"id": 1118, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1108, "src": "5493:7:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 1134, "nodeType": "Block", "src": "5550:519:4", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1125, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 1122, "name": "returndata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1110, "src": "5634:10:4", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 1123, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "5634:17:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 1124, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5654:1:4", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "5634:21:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 1132, "nodeType": "Block", "src": "6006:53:4", "statements": [{"expression": {"arguments": [{"id": 1129, "name": "errorMessage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1095, "src": "6031:12:4", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 1128, "name": "revert", "nodeType": "Identifier", "overloadedDeclarations": [-19, -19], "referencedDeclaration": -19, "src": "6024:6:4", "typeDescriptions": {"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory) pure"}}, "id": 1130, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6024:20:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1131, "nodeType": "ExpressionStatement", "src": "6024:20:4"}]}, "id": 1133, "nodeType": "IfStatement", "src": "5630:429:4", "trueBody": {"id": 1127, "nodeType": "Block", "src": "5657:343:4", "statements": [{"AST": {"nodeType": "YulBlock", "src": "5841:145:4", "statements": [{"nodeType": "YulVariableDeclaration", "src": "5863:40:4", "value": {"arguments": [{"name": "returndata", "nodeType": "YulIdentifier", "src": "5892:10:4"}], "functionName": {"name": "mload", "nodeType": "YulIdentifier", "src": "5886:5:4"}, "nodeType": "YulFunctionCall", "src": "5886:17:4"}, "variables": [{"name": "returndata_size", "nodeType": "YulTypedName", "src": "5867:15:4", "type": ""}]}, {"expression": {"arguments": [{"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "5935:2:4", "type": "", "value": "32"}, {"name": "returndata", "nodeType": "YulIdentifier", "src": "5939:10:4"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "5931:3:4"}, "nodeType": "YulFunctionCall", "src": "5931:19:4"}, {"name": "returndata_size", "nodeType": "YulIdentifier", "src": "5952:15:4"}], "functionName": {"name": "revert", "nodeType": "YulIdentifier", "src": "5924:6:4"}, "nodeType": "YulFunctionCall", "src": "5924:44:4"}, "nodeType": "YulExpressionStatement", "src": "5924:44:4"}]}, "evmVersion": "istanbul", "externalReferences": [{"declaration": 1110, "isOffset": false, "isSlot": false, "src": "5892:10:4", "valueSize": 1}, {"declaration": 1110, "isOffset": false, "isSlot": false, "src": "5939:10:4", "valueSize": 1}], "id": 1126, "nodeType": "InlineAssembly", "src": "5832:154:4"}]}}]}, "id": 1135, "nodeType": "IfStatement", "src": "5489:580:4", "trueBody": {"id": 1121, "nodeType": "Block", "src": "5502:42:4", "statements": [{"expression": {"id": 1119, "name": "returndata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1110, "src": "5523:10:4", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "functionReturnParameters": 1099, "id": 1120, "nodeType": "Return", "src": "5516:17:4"}]}}]}, "id": 1137, "implemented": true, "kind": "function", "modifiers": [], "name": "_functionCallWithValue", "nodeType": "FunctionDefinition", "parameters": {"id": 1096, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1089, "mutability": "mutable", "name": "target", "nodeType": "VariableDeclaration", "scope": 1137, "src": "5149:14:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1088, "name": "address", "nodeType": "ElementaryTypeName", "src": "5149:7:4", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1091, "mutability": "mutable", "name": "data", "nodeType": "VariableDeclaration", "scope": 1137, "src": "5165:17:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1090, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "5165:5:4", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}, {"constant": false, "id": 1093, "mutability": "mutable", "name": "weiValue", "nodeType": "VariableDeclaration", "scope": 1137, "src": "5184:16:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1092, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5184:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1095, "mutability": "mutable", "name": "errorMessage", "nodeType": "VariableDeclaration", "scope": 1137, "src": "5202:26:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 1094, "name": "string", "nodeType": "ElementaryTypeName", "src": "5202:6:4", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "5148:81:4"}, "returnParameters": {"id": 1099, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1098, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1137, "src": "5247:12:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1097, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "5247:5:4", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "5246:14:4"}, "scope": 1138, "src": "5117:958:4", "stateMutability": "nonpayable", "virtual": false, "visibility": "private"}], "scope": 1139, "src": "126:5951:4"}], "src": "33:6045:4"}}, "/Users/bohendo/Documents/ethconsole/src.sol/Echidna.sol": {"AST": {"absolutePath": "src.sol/Echidna.sol", "exportedSymbols": {"Address": [1138], "Context": [660], "ERC20": [637], "Echidna": [45], "FakeToken": [130], "IERC20": [934], "SafeMath": [856], "Scratchpad": [80]}, "id": 46, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 1, "literals": ["solidity", "0.7", ".6"], "nodeType": "PragmaDirective", "src": "32:22:5"}, {"absolutePath": "src.sol/Scratchpad.sol", "file": "./Scratchpad.sol", "id": 2, "nodeType": "ImportDirective", "scope": 46, "sourceUnit": 81, "src": "56:26:5", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "src.sol/tokens/FakeToken.sol", "file": "./tokens/FakeToken.sol", "id": 3, "nodeType": "ImportDirective", "scope": 46, "sourceUnit": 131, "src": "83:32:5", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [], "contractDependencies": [80, 130], "contractKind": "contract", "fullyImplemented": true, "id": 45, "linearizedBaseContracts": [45], "name": "Echidna", "nodeType": "ContractDefinition", "nodes": [{"constant": false, "id": 5, "mutability": "mutable", "name": "scratchpad", "nodeType": "VariableDeclaration", "scope": 45, "src": "142:29:5", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_Scratchpad_$80", "typeString": "contract Scratchpad"}, "typeName": {"id": 4, "name": "Scratchpad", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 80, "src": "142:10:5", "typeDescriptions": {"typeIdentifier": "t_contract$_Scratchpad_$80", "typeString": "contract Scratchpad"}}, "visibility": "private"}, {"constant": false, "id": 7, "mutability": "mutable", "name": "token", "nodeType": "VariableDeclaration", "scope": 45, "src": "177:23:5", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_FakeToken_$130", "typeString": "contract FakeToken"}, "typeName": {"id": 6, "name": "FakeToken", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 130, "src": "177:9:5", "typeDescriptions": {"typeIdentifier": "t_contract$_FakeToken_$130", "typeString": "contract FakeToken"}}, "visibility": "private"}, {"body": {"id": 24, "nodeType": "Block", "src": "221:99:5", "statements": [{"expression": {"id": 14, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 10, "name": "scratchpad", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5, "src": "231:10:5", "typeDescriptions": {"typeIdentifier": "t_contract$_Scratchpad_$80", "typeString": "contract Scratchpad"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [], "expression": {"argumentTypes": [], "id": 12, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "NewExpression", "src": "244:14:5", "typeDescriptions": {"typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Scratchpad_$80_$", "typeString": "function () returns (contract Scratchpad)"}, "typeName": {"id": 11, "name": "Scratchpad", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 80, "src": "248:10:5", "typeDescriptions": {"typeIdentifier": "t_contract$_Scratchpad_$80", "typeString": "contract Scratchpad"}}}, "id": 13, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "244:16:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_Scratchpad_$80", "typeString": "contract Scratchpad"}}, "src": "231:29:5", "typeDescriptions": {"typeIdentifier": "t_contract$_Scratchpad_$80", "typeString": "contract Scratchpad"}}, "id": 15, "nodeType": "ExpressionStatement", "src": "231:29:5"}, {"expression": {"id": 22, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 16, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7, "src": "270:5:5", "typeDescriptions": {"typeIdentifier": "t_contract$_FakeToken_$130", "typeString": "contract FakeToken"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "46616b6520546f6b656e", "id": 19, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "292:12:5", "typeDescriptions": {"typeIdentifier": "t_stringliteral_e61f73a3b7e463faacc2cafccac8e68974b90d8597dd32956bbcd97fb7ad56ee", "typeString": "literal_string \"Fake Token\""}, "value": "Fake Token"}, {"hexValue": "46414b45", "id": 20, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "306:6:5", "typeDescriptions": {"typeIdentifier": "t_stringliteral_b5fc010b960e38897991281f8ef1d9afc4109d5458802063f812fee9328508c1", "typeString": "literal_string \"FAKE\""}, "value": "FAKE"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_e61f73a3b7e463faacc2cafccac8e68974b90d8597dd32956bbcd97fb7ad56ee", "typeString": "literal_string \"Fake Token\""}, {"typeIdentifier": "t_stringliteral_b5fc010b960e38897991281f8ef1d9afc4109d5458802063f812fee9328508c1", "typeString": "literal_string \"FAKE\""}], "id": 18, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "NewExpression", "src": "278:13:5", "typeDescriptions": {"typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_FakeToken_$130_$", "typeString": "function (string memory,string memory) returns (contract FakeToken)"}, "typeName": {"id": 17, "name": "FakeToken", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 130, "src": "282:9:5", "typeDescriptions": {"typeIdentifier": "t_contract$_FakeToken_$130", "typeString": "contract FakeToken"}}}, "id": 21, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "278:35:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_FakeToken_$130", "typeString": "contract FakeToken"}}, "src": "270:43:5", "typeDescriptions": {"typeIdentifier": "t_contract$_FakeToken_$130", "typeString": "contract FakeToken"}}, "id": 23, "nodeType": "ExpressionStatement", "src": "270:43:5"}]}, "id": 25, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 8, "nodeType": "ParameterList", "parameters": [], "src": "218:2:5"}, "returnParameters": {"id": 9, "nodeType": "ParameterList", "parameters": [], "src": "221:0:5"}, "scope": 45, "src": "207:113:5", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 43, "nodeType": "Block", "src": "352:83:5", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 28, "name": "scratchpad", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5, "src": "362:10:5", "typeDescriptions": {"typeIdentifier": "t_contract$_Scratchpad_$80", "typeString": "contract Scratchpad"}}, "id": 30, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "fun", "nodeType": "MemberAccess", "referencedDeclaration": 79, "src": "362:14:5", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$__$returns$__$", "typeString": "function () external"}}, "id": 31, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "362:16:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 32, "nodeType": "ExpressionStatement", "src": "362:16:5"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 40, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 34, "name": "scratchpad", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5, "src": "395:10:5", "typeDescriptions": {"typeIdentifier": "t_contract$_Scratchpad_$80", "typeString": "contract Scratchpad"}}, "id": 35, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "a", "nodeType": "MemberAccess", "referencedDeclaration": 50, "src": "395:12:5", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 36, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "395:14:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 37, "name": "scratchpad", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5, "src": "413:10:5", "typeDescriptions": {"typeIdentifier": "t_contract$_Scratchpad_$80", "typeString": "contract Scratchpad"}}, "id": 38, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "b", "nodeType": "MemberAccess", "referencedDeclaration": 53, "src": "413:12:5", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 39, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "413:14:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "395:32:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 33, "name": "assert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -3, "src": "388:6:5", "typeDescriptions": {"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 41, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "388:40:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 42, "nodeType": "ExpressionStatement", "src": "388:40:5"}]}, "functionSelector": "855f302c", "id": 44, "implemented": true, "kind": "function", "modifiers": [], "name": "testFun", "nodeType": "FunctionDefinition", "parameters": {"id": 26, "nodeType": "ParameterList", "parameters": [], "src": "342:2:5"}, "returnParameters": {"id": 27, "nodeType": "ParameterList", "parameters": [], "src": "352:0:5"}, "scope": 45, "src": "326:109:5", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}], "scope": 46, "src": "117:321:5"}], "src": "32:407:5"}}, "/Users/bohendo/Documents/ethconsole/src.sol/Scratchpad.sol": {"AST": {"absolutePath": "src.sol/Scratchpad.sol", "exportedSymbols": {"Scratchpad": [80]}, "id": 81, "license": "GPL-3.0-or-later", "nodeType": "SourceUnit", "nodes": [{"id": 47, "literals": ["solidity", "0.7", ".6"], "nodeType": "PragmaDirective", "src": "45:22:6"}, {"abstract": false, "baseContracts": [], "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 80, "linearizedBaseContracts": [80], "name": "Scratchpad", "nodeType": "ContractDefinition", "nodes": [{"constant": false, "functionSelector": "0dbe671f", "id": 50, "mutability": "mutable", "name": "a", "nodeType": "VariableDeclaration", "scope": 80, "src": "95:20:6", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 48, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "95:7:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "30", "id": 49, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "114:1:6", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "visibility": "public"}, {"constant": false, "functionSelector": "4df7e3d0", "id": 53, "mutability": "mutable", "name": "b", "nodeType": "VariableDeclaration", "scope": 80, "src": "121:20:6", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 51, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "121:7:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "30", "id": 52, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "140:1:6", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "visibility": "public"}, {"body": {"id": 56, "nodeType": "Block", "src": "162:2:6", "statements": []}, "id": 57, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 54, "nodeType": "ParameterList", "parameters": [], "src": "159:2:6"}, "returnParameters": {"id": 55, "nodeType": "ParameterList", "parameters": [], "src": "162:0:6"}, "scope": 80, "src": "148:16:6", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 78, "nodeType": "Block", "src": "192:72:6", "statements": [{"expression": {"id": 62, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 60, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 50, "src": "202:1:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"hexValue": "31", "id": 61, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "207:1:6", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "202:6:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 63, "nodeType": "ExpressionStatement", "src": "202:6:6"}, {"expression": {"id": 66, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 64, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 53, "src": "218:1:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"hexValue": "31", "id": 65, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "223:1:6", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "218:6:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 67, "nodeType": "ExpressionStatement", "src": "218:6:6"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 72, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 70, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 68, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 50, "src": "238:1:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "%", "rightExpression": {"hexValue": "3432", "id": 69, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "242:2:6", "typeDescriptions": {"typeIdentifier": "t_rational_42_by_1", "typeString": "int_const 42"}, "value": "42"}, "src": "238:6:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 71, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "248:1:6", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "238:11:6", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 77, "nodeType": "IfStatement", "src": "234:23:6", "trueBody": {"expression": {"id": 75, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 73, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 50, "src": "251:1:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"hexValue": "31", "id": 74, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "256:1:6", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "251:6:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 76, "nodeType": "ExpressionStatement", "src": "251:6:6"}}]}, "functionSelector": "946644cd", "id": 79, "implemented": true, "kind": "function", "modifiers": [], "name": "fun", "nodeType": "FunctionDefinition", "parameters": {"id": 58, "nodeType": "ParameterList", "parameters": [], "src": "182:2:6"}, "returnParameters": {"id": 59, "nodeType": "ParameterList", "parameters": [], "src": "192:0:6"}, "scope": 80, "src": "170:94:6", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}], "scope": 81, "src": "69:197:6"}], "src": "45:222:6"}}, "/Users/bohendo/Documents/ethconsole/src.sol/tokens/FakeToken.sol": {"AST": {"absolutePath": "src.sol/tokens/FakeToken.sol", "exportedSymbols": {"Address": [1138], "Context": [660], "ERC20": [637], "FakeToken": [130], "IERC20": [934], "SafeMath": [856]}, "id": 131, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 82, "literals": ["solidity", "0.7", ".6"], "nodeType": "PragmaDirective", "src": "33:22:7"}, {"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol", "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol", "id": 83, "nodeType": "ImportDirective", "scope": 131, "sourceUnit": 638, "src": "57:55:7", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 84, "name": "ERC20", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 637, "src": "270:5:7", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$637", "typeString": "contract ERC20"}}, "id": 85, "nodeType": "InheritanceSpecifier", "src": "270:5:7"}], "contractDependencies": [637, 660, 934], "contractKind": "contract", "fullyImplemented": true, "id": 130, "linearizedBaseContracts": [130, 637, 934, 660], "name": "FakeToken", "nodeType": "ContractDefinition", "nodes": [{"body": {"id": 102, "nodeType": "Block", "src": "356:49:7", "statements": [{"expression": {"arguments": [{"expression": {"id": 97, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "372:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 98, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "372:10:7", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"hexValue": "31303030303030", "id": 99, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "384:13:7", "subdenomination": "ether", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000000000_by_1", "typeString": "int_const 1000000000000000000000000"}, "value": "1000000"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_rational_1000000000000000000000000_by_1", "typeString": "int_const 1000000000000000000000000"}], "id": 96, "name": "_mint", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 513, "src": "366:5:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 100, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "366:32:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 101, "nodeType": "ExpressionStatement", "src": "366:32:7"}]}, "id": 103, "implemented": true, "kind": "constructor", "modifiers": [{"arguments": [{"id": 92, "name": "name", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 87, "src": "342:4:7", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, {"id": 93, "name": "symbol", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 89, "src": "348:6:7", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "id": 94, "modifierName": {"id": 91, "name": "ERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 637, "src": "336:5:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ERC20_$637_$", "typeString": "type(contract ERC20)"}}, "nodeType": "ModifierInvocation", "src": "336:19:7"}], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 90, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 87, "mutability": "mutable", "name": "name", "nodeType": "VariableDeclaration", "scope": 103, "src": "294:18:7", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 86, "name": "string", "nodeType": "ElementaryTypeName", "src": "294:6:7", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 89, "mutability": "mutable", "name": "symbol", "nodeType": "VariableDeclaration", "scope": 103, "src": "314:20:7", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 88, "name": "string", "nodeType": "ElementaryTypeName", "src": "314:6:7", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "293:42:7"}, "returnParameters": {"id": 95, "nodeType": "ParameterList", "parameters": [], "src": "356:0:7"}, "scope": 130, "src": "282:123:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 115, "nodeType": "Block", "src": "467:39:7", "statements": [{"expression": {"arguments": [{"id": 111, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 105, "src": "483:7:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 112, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 107, "src": "492:6:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 110, "name": "_mint", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 513, "src": "477:5:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 113, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "477:22:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 114, "nodeType": "ExpressionStatement", "src": "477:22:7"}]}, "functionSelector": "40c10f19", "id": 116, "implemented": true, "kind": "function", "modifiers": [], "name": "mint", "nodeType": "FunctionDefinition", "parameters": {"id": 108, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 105, "mutability": "mutable", "name": "account", "nodeType": "VariableDeclaration", "scope": 116, "src": "425:15:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 104, "name": "address", "nodeType": "ElementaryTypeName", "src": "425:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 107, "mutability": "mutable", "name": "amount", "nodeType": "VariableDeclaration", "scope": 116, "src": "442:14:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 106, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "442:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "424:33:7"}, "returnParameters": {"id": 109, "nodeType": "ParameterList", "parameters": [], "src": "467:0:7"}, "scope": 130, "src": "411:95:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 128, "nodeType": "Block", "src": "568:39:7", "statements": [{"expression": {"arguments": [{"id": 124, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 118, "src": "584:7:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 125, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 120, "src": "593:6:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 123, "name": "_burn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 569, "src": "578:5:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 126, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "578:22:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 127, "nodeType": "ExpressionStatement", "src": "578:22:7"}]}, "functionSelector": "9dc29fac", "id": 129, "implemented": true, "kind": "function", "modifiers": [], "name": "burn", "nodeType": "FunctionDefinition", "parameters": {"id": 121, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 118, "mutability": "mutable", "name": "account", "nodeType": "VariableDeclaration", "scope": 129, "src": "526:15:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 117, "name": "address", "nodeType": "ElementaryTypeName", "src": "526:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 120, "mutability": "mutable", "name": "amount", "nodeType": "VariableDeclaration", "scope": 129, "src": "543:14:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 119, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "543:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "525:33:7"}, "returnParameters": {"id": 122, "nodeType": "ParameterList", "parameters": [], "src": "568:0:7"}, "scope": 130, "src": "512:95:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}], "scope": 131, "src": "248:361:7"}], "src": "33:577:7"}}}, "sourceList": ["/Users/bohendo/Documents/ethconsole/node_modules/@openzeppelin/contracts/GSN/Context.sol", "/Users/bohendo/Documents/ethconsole/node_modules/@openzeppelin/contracts/math/SafeMath.sol", "/Users/bohendo/Documents/ethconsole/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol", "/Users/bohendo/Documents/ethconsole/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol", "/Users/bohendo/Documents/ethconsole/node_modules/@openzeppelin/contracts/utils/Address.sol", "/Users/bohendo/Documents/ethconsole/src.sol/Echidna.sol", "/Users/bohendo/Documents/ethconsole/src.sol/Scratchpad.sol", "/Users/bohendo/Documents/ethconsole/src.sol/tokens/FakeToken.sol"], "contracts": {"/Users/bohendo/Documents/ethconsole/node_modules/@openzeppelin/contracts/GSN/Context.sol:Context": {"srcmap": "", "srcmap-runtime": "", "abi": "[]", "bin": "", "bin-runtime": "", "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {}, "author": null, "details": null, "title": null}}, "/Users/bohendo/Documents/ethconsole/node_modules/@openzeppelin/contracts/math/SafeMath.sol:SafeMath": {"srcmap": "622:4578:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;", "srcmap-runtime": "622:4578:1:-:0;;;;;;;;", "abi": "[]", "bin": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122051d335440152cd62f822d05c88487cb1cf0907b9afadb487403427fe2c9a2aae64736f6c63430007060033", "bin-runtime": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122051d335440152cd62f822d05c88487cb1cf0907b9afadb487403427fe2c9a2aae64736f6c63430007060033", "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {}, "author": null, "details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.", "title": null}}, "/Users/bohendo/Documents/ethconsole/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {"srcmap": "1345:9437:2:-:0;;;2013:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2086:4;2078:5;:12;;;;;;;;;;;;:::i;:::-;;2110:6;2100:7;:16;;;;;;;;;;;;:::i;:::-;;2138:2;2126:9;;:14;;;;;;;;;;;;;;;;;;2013:134;;1345:9437;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;", "srcmap-runtime": "1345:9437:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2212:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4248:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3255:98;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4874:317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3114:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5586:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3411:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2406:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6288:266;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3731:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3961:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2212:81;2249:13;2281:5;2274:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2212:81;:::o;4248:166::-;4331:4;4347:39;4356:12;:10;:12::i;:::-;4370:7;4379:6;4347:8;:39::i;:::-;4403:4;4396:11;;4248:166;;;;:::o;3255:98::-;3308:7;3334:12;;3327:19;;3255:98;:::o;4874:317::-;4980:4;4996:36;5006:6;5014:9;5025:6;4996:9;:36::i;:::-;5042:121;5051:6;5059:12;:10;:12::i;:::-;5073:89;5111:6;5073:89;;;;;;;;;;;;;;;;;:11;:19;5085:6;5073:19;;;;;;;;;;;;;;;:33;5093:12;:10;:12::i;:::-;5073:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5042:8;:121::i;:::-;5180:4;5173:11;;4874:317;;;;;:::o;3114:81::-;3155:5;3179:9;;;;;;;;;;;3172:16;;3114:81;:::o;5586:215::-;5674:4;5690:83;5699:12;:10;:12::i;:::-;5713:7;5722:50;5761:10;5722:11;:25;5734:12;:10;:12::i;:::-;5722:25;;;;;;;;;;;;;;;:34;5748:7;5722:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5690:8;:83::i;:::-;5790:4;5783:11;;5586:215;;;;:::o;3411:117::-;3477:7;3503:9;:18;3513:7;3503:18;;;;;;;;;;;;;;;;3496:25;;3411:117;;;:::o;2406:85::-;2445:13;2477:7;2470:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2406:85;:::o;6288:266::-;6381:4;6397:129;6406:12;:10;:12::i;:::-;6420:7;6429:96;6468:15;6429:96;;;;;;;;;;;;;;;;;:11;:25;6441:12;:10;:12::i;:::-;6429:25;;;;;;;;;;;;;;;:34;6455:7;6429:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6397:8;:129::i;:::-;6543:4;6536:11;;6288:266;;;;:::o;3731:172::-;3817:4;3833:42;3843:12;:10;:12::i;:::-;3857:9;3868:6;3833:9;:42::i;:::-;3892:4;3885:11;;3731:172;;;;:::o;3961:149::-;4050:7;4076:11;:18;4088:5;4076:18;;;;;;;;;;;;;;;:27;4095:7;4076:27;;;;;;;;;;;;;;;;4069:34;;3961:149;;;;:::o;590:104:0:-;643:15;677:10;670:17;;590:104;:::o;9350:340:2:-;9468:1;9451:19;;:5;:19;;;;9443:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9548:1;9529:21;;:7;:21;;;;9521:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9630:6;9600:11;:18;9612:5;9600:18;;;;;;;;;;;;;;;:27;9619:7;9600:27;;;;;;;;;;;;;;;:36;;;;9667:7;9651:32;;9660:5;9651:32;;;9676:6;9651:32;;;;;;;;;;;;;;;;;;9350:340;;;:::o;7028:530::-;7151:1;7133:20;;:6;:20;;;;7125:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7234:1;7213:23;;:9;:23;;;;7205:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7287:47;7308:6;7316:9;7327:6;7287:20;:47::i;:::-;7365:71;7387:6;7365:71;;;;;;;;;;;;;;;;;:9;:17;7375:6;7365:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7345:9;:17;7355:6;7345:17;;;;;;;;;;;;;;;:91;;;;7469:32;7494:6;7469:9;:20;7479:9;7469:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7446:9;:20;7456:9;7446:20;;;;;;;;;;;;;;;:55;;;;7533:9;7516:35;;7525:6;7516:35;;;7544:6;7516:35;;;;;;;;;;;;;;;;;;7028:530;;;:::o;1746:187:1:-;1832:7;1864:1;1859;:6;;1867:12;1851:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1890:9;1906:1;1902;:5;1890:17;;1925:1;1918:8;;;1746:187;;;;;:::o;874:176::-;932:7;951:9;967:1;963;:5;951:17;;991:1;986;:6;;978:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1042:1;1035:8;;;874:176;;;;:::o;10688:92:2:-;;;;:::o", "abi": "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "bin": "60806040523480156200001157600080fd5b50604051620013b5380380620013b5833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b838201915060208201858111156200012c57600080fd5b82518660018202830111640100000000821117156200014a57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018057808201518184015260208101905062000163565b50505050905090810190601f168015620001ae5780820380516001836020036101000a031916815260200191505b506040525050508160039080519060200190620001cd9291906200020b565b508060049080519060200190620001e69291906200020b565b506012600560006101000a81548160ff021916908360ff1602179055505050620002c1565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200024357600085556200028f565b82601f106200025e57805160ff19168380011785556200028f565b828001600101855582156200028f579182015b828111156200028e57825182559160200191906001019062000271565b5b5090506200029e9190620002a2565b5090565b5b80821115620002bd576000816000905550600101620002a3565b5090565b6110e480620002d16000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461025857806370a08231146102bc57806395d89b4114610314578063a457c2d714610397578063a9059cbb146103fb578063dd62ed3e1461045f576100a9565b806306fdde03146100ae578063095ea7b31461013157806318160ddd1461019557806323b872dd146101b3578063313ce56714610237575b600080fd5b6100b66104d7565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610579565b60405180821515815260200191505060405180910390f35b61019d610597565b6040518082815260200191505060405180910390f35b61021f600480360360608110156101c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a1565b60405180821515815260200191505060405180910390f35b61023f61067a565b604051808260ff16815260200191505060405180910390f35b6102a46004803603604081101561026e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610691565b60405180821515815260200191505060405180910390f35b6102fe600480360360208110156102d257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610744565b6040518082815260200191505060405180910390f35b61031c61078c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561035c578082015181840152602081019050610341565b50505050905090810190601f1680156103895780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103e3600480360360408110156103ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061082e565b60405180821515815260200191505060405180910390f35b6104476004803603604081101561041157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108fb565b60405180821515815260200191505060405180910390f35b6104c16004803603604081101561047557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610919565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561056f5780601f106105445761010080835404028352916020019161056f565b820191906000526020600020905b81548152906001019060200180831161055257829003601f168201915b5050505050905090565b600061058d6105866109a0565b84846109a8565b6001905092915050565b6000600254905090565b60006105ae848484610b9f565b61066f846105ba6109a0565b61066a8560405180606001604052806028815260200161101960289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006106206109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b600190509392505050565b6000600560009054906101000a900460ff16905090565b600061073a61069e6109a0565b8461073585600160006106af6109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f2090919063ffffffff16565b6109a8565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108245780601f106107f957610100808354040283529160200191610824565b820191906000526020600020905b81548152906001019060200180831161080757829003601f168201915b5050505050905090565b60006108f161083b6109a0565b846108ec8560405180606001604052806025815260200161108a60259139600160006108656109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b6001905092915050565b600061090f6109086109a0565b8484610b9f565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a2e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806110666024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ab4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610fd16022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c25576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806110416025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610fae6023913960400191505060405180910390fd5b610cb6838383610fa8565b610d2181604051806060016040528060268152602001610ff3602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610db4816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f2090919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610f0d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ed2578082015181840152602081019050610eb7565b50505050905090810190601f168015610eff5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015610f9e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220004f2eaad53d2a187f533c90ef65427220ec210adb87e6fafa61f4929141893964736f6c63430007060033", "bin-runtime": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461025857806370a08231146102bc57806395d89b4114610314578063a457c2d714610397578063a9059cbb146103fb578063dd62ed3e1461045f576100a9565b806306fdde03146100ae578063095ea7b31461013157806318160ddd1461019557806323b872dd146101b3578063313ce56714610237575b600080fd5b6100b66104d7565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610579565b60405180821515815260200191505060405180910390f35b61019d610597565b6040518082815260200191505060405180910390f35b61021f600480360360608110156101c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a1565b60405180821515815260200191505060405180910390f35b61023f61067a565b604051808260ff16815260200191505060405180910390f35b6102a46004803603604081101561026e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610691565b60405180821515815260200191505060405180910390f35b6102fe600480360360208110156102d257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610744565b6040518082815260200191505060405180910390f35b61031c61078c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561035c578082015181840152602081019050610341565b50505050905090810190601f1680156103895780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103e3600480360360408110156103ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061082e565b60405180821515815260200191505060405180910390f35b6104476004803603604081101561041157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108fb565b60405180821515815260200191505060405180910390f35b6104c16004803603604081101561047557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610919565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561056f5780601f106105445761010080835404028352916020019161056f565b820191906000526020600020905b81548152906001019060200180831161055257829003601f168201915b5050505050905090565b600061058d6105866109a0565b84846109a8565b6001905092915050565b6000600254905090565b60006105ae848484610b9f565b61066f846105ba6109a0565b61066a8560405180606001604052806028815260200161101960289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006106206109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b600190509392505050565b6000600560009054906101000a900460ff16905090565b600061073a61069e6109a0565b8461073585600160006106af6109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f2090919063ffffffff16565b6109a8565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108245780601f106107f957610100808354040283529160200191610824565b820191906000526020600020905b81548152906001019060200180831161080757829003601f168201915b5050505050905090565b60006108f161083b6109a0565b846108ec8560405180606001604052806025815260200161108a60259139600160006108656109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b6001905092915050565b600061090f6109086109a0565b8484610b9f565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a2e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806110666024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ab4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610fd16022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c25576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806110416025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610fae6023913960400191505060405180910390fd5b610cb6838383610fa8565b610d2181604051806060016040528060268152602001610ff3602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610db4816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f2090919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610f0d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ed2578082015181840152602081019050610eb7565b50505050905090810190601f168015610eff5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015610f9e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220004f2eaad53d2a187f533c90ef65427220ec210adb87e6fafa61f4929141893964736f6c63430007060033", "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {"allowance(address,address)": {"author": null, "details": "See {IERC20-allowance}.", "params": {}, "return": null}, "approve(address,uint256)": {"author": null, "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.", "params": {}, "return": null}, "balanceOf(address)": {"author": null, "details": "See {IERC20-balanceOf}.", "params": {}, "return": null}, "constructor": {"author": null, "details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction.", "params": {}, "return": null}, "decimals()": {"author": null, "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.", "params": {}, "return": null}, "decreaseAllowance(address,uint256)": {"author": null, "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.", "params": {}, "return": null}, "increaseAllowance(address,uint256)": {"author": null, "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.", "params": {}, "return": null}, "name()": {"author": null, "details": "Returns the name of the token.", "params": {}, "return": null}, "symbol()": {"author": null, "details": "Returns the symbol of the token, usually a shorter version of the name.", "params": {}, "return": null}, "totalSupply()": {"author": null, "details": "See {IERC20-totalSupply}.", "params": {}, "return": null}, "transfer(address,uint256)": {"author": null, "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.", "params": {}, "return": null}, "transferFrom(address,address,uint256)": {"author": null, "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.", "params": {}, "return": null}}, "author": null, "details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.", "title": null}}, "/Users/bohendo/Documents/ethconsole/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {"srcmap": "", "srcmap-runtime": "", "abi": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "bin": "", "bin-runtime": "", "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {"allowance(address,address)": {"author": null, "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.", "params": {}, "return": null}, "approve(address,uint256)": {"author": null, "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.", "params": {}, "return": null}, "balanceOf(address)": {"author": null, "details": "Returns the amount of tokens owned by `account`.", "params": {}, "return": null}, "totalSupply()": {"author": null, "details": "Returns the amount of tokens in existence.", "params": {}, "return": null}, "transfer(address,uint256)": {"author": null, "details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.", "params": {}, "return": null}, "transferFrom(address,address,uint256)": {"author": null, "details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.", "params": {}, "return": null}}, "author": null, "details": "Interface of the ERC20 standard as defined in the EIP.", "title": null}}, "/Users/bohendo/Documents/ethconsole/node_modules/@openzeppelin/contracts/utils/Address.sol:Address": {"srcmap": "126:5951:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;", "srcmap-runtime": "126:5951:4:-:0;;;;;;;;", "abi": "[]", "bin": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208c5411ebbea67839e409f23b2c429a863bf2ba7328adcf61c74405d0948a583064736f6c63430007060033", "bin-runtime": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208c5411ebbea67839e409f23b2c429a863bf2ba7328adcf61c74405d0948a583064736f6c63430007060033", "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {}, "author": null, "details": "Collection of functions related to the address type", "title": null}}, "/Users/bohendo/Documents/ethconsole/src.sol/Echidna.sol:Echidna": {"srcmap": "117:321:5:-:0;;;207:113;;;;;;;;;;244:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;231:10;;:29;;;;;;;;;;;;;;;;;;278:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;270:5;;:43;;;;;;;;;;;;;;;;;;117:321;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;", "srcmap-runtime": "117:321:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;326:109;;;:::i;:::-;;;362:10;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;413:10;;;;;;;;;;:12;;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;395:10;;;;;;;;;;:12;;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:32;388:40;;;;326:109::o", "abi": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"testFun\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "bin": "608060405234801561001057600080fd5b5060405161001d9061015c565b604051809103906000f080158015610039573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060405161008590610169565b8080602001806020018381038352600a8152602001807f46616b6520546f6b656e00000000000000000000000000000000000000000000815250602001838103825260048152602001807f46414b450000000000000000000000000000000000000000000000000000000081525060200192505050604051809103906000f080158015610116573d6000803e3d6000fd5b50600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610176565b610132806103c083390190565b611b37806104f283390190565b61023b806101856000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063855f302c14610030575b600080fd5b61003861003a565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663946644cd6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156100a257600080fd5b505af11580156100b6573d6000803e3d6000fd5b5050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634df7e3d06040518163ffffffff1660e01b815260040160206040518083038186803b15801561012057600080fd5b505afa158015610134573d6000803e3d6000fd5b505050506040513d602081101561014a57600080fd5b810190808051906020019092919050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630dbe671f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156101c157600080fd5b505afa1580156101d5573d6000803e3d6000fd5b505050506040513d60208110156101eb57600080fd5b81019080805190602001909291905050501461020357fe5b56fea26469706673582212204e1fde95358f6d6734e5e9a00288776b13905f30e11483d3bcd907d8e962e1a664736f6c63430007060033608060405260008055600060015534801561001957600080fd5b50610109806100296000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c80630dbe671f1460415780634df7e3d014605d578063946644cd146079575b600080fd5b60476081565b6040518082815260200191505060405180910390f35b60636087565b6040518082815260200191505060405180910390f35b607f608d565b005b60005481565b60015481565b60016000808282540192505081905550600180600082825401925050819055506000602a6000548160ba57fe5b06141560d157600160008082825401925050819055505b56fea26469706673582212200b7e896095a3fcb58ec955deab631554f118082a3370be3be31e16deefc86a6b64736f6c6343000706003360806040523480156200001157600080fd5b5060405162001b3738038062001b37833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b838201915060208201858111156200012c57600080fd5b82518660018202830111640100000000821117156200014a57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018057808201518184015260208101905062000163565b50505050905090810190601f168015620001ae5780820380516001836020036101000a031916815260200191505b5060405250505081818160039080519060200190620001cf92919062000497565b508060049080519060200190620001e892919062000497565b506012600560006101000a81548160ff021916908360ff1602179055505050620002233369d3c21bcecceda10000006200022b60201b60201c565b50506200054d565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620002cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b620002e3600083836200040960201b60201c565b620002ff816002546200040e60201b62000a7e1790919060201c565b6002819055506200035d816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546200040e60201b62000a7e1790919060201c565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b505050565b6000808284019050838110156200048d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620004cf57600085556200051b565b82601f10620004ea57805160ff19168380011785556200051b565b828001600101855582156200051b579182015b828111156200051a578251825591602001919060010190620004fd565b5b5090506200052a91906200052e565b5090565b5b80821115620005495760008160009055506001016200052f565b5090565b6115da806200055d6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806340c10f191161008c5780639dc29fac116100665780639dc29fac1461040b578063a457c2d714610459578063a9059cbb146104bd578063dd62ed3e14610521576100cf565b806340c10f19146102e257806370a082311461033057806395d89b4114610388576100cf565b806306fdde03146100d4578063095ea7b31461015757806318160ddd146101bb57806323b872dd146101d9578063313ce5671461025d578063395093511461027e575b600080fd5b6100dc610599565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561011c578082015181840152602081019050610101565b50505050905090810190601f1680156101495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561016d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061063b565b60405180821515815260200191505060405180910390f35b6101c3610659565b6040518082815260200191505060405180910390f35b610245600480360360608110156101ef57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610663565b60405180821515815260200191505060405180910390f35b61026561073c565b604051808260ff16815260200191505060405180910390f35b6102ca6004803603604081101561029457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610753565b60405180821515815260200191505060405180910390f35b61032e600480360360408110156102f857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610806565b005b6103726004803603602081101561034657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610814565b6040518082815260200191505060405180910390f35b61039061085c565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103d05780820151818401526020810190506103b5565b50505050905090810190601f1680156103fd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104576004803603604081101561042157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108fe565b005b6104a56004803603604081101561046f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061090c565b60405180821515815260200191505060405180910390f35b610509600480360360408110156104d357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506109d9565b60405180821515815260200191505060405180910390f35b6105836004803603604081101561053757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109f7565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106315780601f1061060657610100808354040283529160200191610631565b820191906000526020600020905b81548152906001019060200180831161061457829003601f168201915b5050505050905090565b600061064f610648610b06565b8484610b0e565b6001905092915050565b6000600254905090565b6000610670848484610d05565b6107318461067c610b06565b61072c856040518060600160405280602881526020016114ee60289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006106e2610b06565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fc69092919063ffffffff16565b610b0e565b600190509392505050565b6000600560009054906101000a900460ff16905090565b60006107fc610760610b06565b846107f78560016000610771610b06565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a7e90919063ffffffff16565b610b0e565b6001905092915050565b6108108282611086565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108f45780601f106108c9576101008083540402835291602001916108f4565b820191906000526020600020905b8154815290600101906020018083116108d757829003601f168201915b5050505050905090565b610908828261124d565b5050565b60006109cf610919610b06565b846109ca856040518060600160405280602581526020016115806025913960016000610943610b06565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fc69092919063ffffffff16565b610b0e565b6001905092915050565b60006109ed6109e6610b06565b8484610d05565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080828401905083811015610afc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b94576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061155c6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c1a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806114a66022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d8b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806115376025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e11576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806114616023913960400191505060405180910390fd5b610e1c838383611411565b610e87816040518060600160405280602681526020016114c8602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fc69092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610f1a816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a7e90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290611073576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561103857808201518184015260208101905061101d565b50505050905090810190601f1680156110655780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611129576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b61113560008383611411565b61114a81600254610a7e90919063ffffffff16565b6002819055506111a1816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a7e90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156112d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806115166021913960400191505060405180910390fd5b6112df82600083611411565b61134a81604051806060016040528060228152602001611484602291396000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fc69092919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506113a18160025461141690919063ffffffff16565b600281905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b505050565b600061145883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610fc6565b90509291505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212201dd979c79456d218566e72fe79b822f18f7fb01b5fb2732cad9451ca6e52733e64736f6c63430007060033", "bin-runtime": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063855f302c14610030575b600080fd5b61003861003a565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663946644cd6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156100a257600080fd5b505af11580156100b6573d6000803e3d6000fd5b5050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634df7e3d06040518163ffffffff1660e01b815260040160206040518083038186803b15801561012057600080fd5b505afa158015610134573d6000803e3d6000fd5b505050506040513d602081101561014a57600080fd5b810190808051906020019092919050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630dbe671f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156101c157600080fd5b505afa1580156101d5573d6000803e3d6000fd5b505050506040513d60208110156101eb57600080fd5b81019080805190602001909291905050501461020357fe5b56fea26469706673582212204e1fde95358f6d6734e5e9a00288776b13905f30e11483d3bcd907d8e962e1a664736f6c63430007060033", "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {}, "author": null, "details": null, "title": null}}, "/Users/bohendo/Documents/ethconsole/src.sol/Scratchpad.sol:Scratchpad": {"srcmap": "69:197:6:-:0;;;114:1;95:20;;140:1;121:20;;148:16;;;;;;;;;;69:197;;;;;;", "srcmap-runtime": "69:197:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;95:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;121;;;:::i;:::-;;;;;;;;;;;;;;;;;;;170:94;;;:::i;:::-;;95:20;;;;:::o;121:::-;;;;:::o;170:94::-;207:1;202;;:6;;;;;;;;;;;223:1;218;;:6;;;;;;;;;;;248:1;242:2;238:1;;:6;;;;;;:11;234:23;;;256:1;251;;:6;;;;;;;;;;;234:23;170:94::o", "abi": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"a\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"b\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fun\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "bin": "608060405260008055600060015534801561001957600080fd5b50610109806100296000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c80630dbe671f1460415780634df7e3d014605d578063946644cd146079575b600080fd5b60476081565b6040518082815260200191505060405180910390f35b60636087565b6040518082815260200191505060405180910390f35b607f608d565b005b60005481565b60015481565b60016000808282540192505081905550600180600082825401925050819055506000602a6000548160ba57fe5b06141560d157600160008082825401925050819055505b56fea26469706673582212200b7e896095a3fcb58ec955deab631554f118082a3370be3be31e16deefc86a6b64736f6c63430007060033", "bin-runtime": "6080604052348015600f57600080fd5b5060043610603c5760003560e01c80630dbe671f1460415780634df7e3d014605d578063946644cd146079575b600080fd5b60476081565b6040518082815260200191505060405180910390f35b60636087565b6040518082815260200191505060405180910390f35b607f608d565b005b60005481565b60015481565b60016000808282540192505081905550600180600082825401925050819055506000602a6000548160ba57fe5b06141560d157600160008082825401925050819055505b56fea26469706673582212200b7e896095a3fcb58ec955deab631554f118082a3370be3be31e16deefc86a6b64736f6c63430007060033", "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {}, "author": null, "details": null, "title": null}}, "/Users/bohendo/Documents/ethconsole/src.sol/tokens/FakeToken.sol:FakeToken": {"srcmap": "248:361:7:-:0;;;282:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;342:4;348:6;2086:4:2;2078:5;:12;;;;;;;;;;;;:::i;:::-;;2110:6;2100:7;:16;;;;;;;;;;;;:::i;:::-;;2138:2;2126:9;;:14;;;;;;;;;;;;;;;;;;2013:134;;366:32:7::1;372:10;384:13;366:5;;;:32;;:::i;:::-;282:123:::0;;248:361;;7828:370:2;7930:1;7911:21;;:7;:21;;;;7903:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7979:49;8008:1;8012:7;8021:6;7979:20;;;:49;;:::i;:::-;8054:24;8071:6;8054:12;;:16;;;;;;:24;;;;:::i;:::-;8039:12;:39;;;;8109:30;8132:6;8109:9;:18;8119:7;8109:18;;;;;;;;;;;;;;;;:22;;;;;;:30;;;;:::i;:::-;8088:9;:18;8098:7;8088:18;;;;;;;;;;;;;;;:51;;;;8175:7;8154:37;;8171:1;8154:37;;;8184:6;8154:37;;;;;;;;;;;;;;;;;;7828:370;;:::o;10688:92::-;;;;:::o;874:176:1:-;932:7;951:9;967:1;963;:5;951:17;;991:1;986;:6;;978:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1042:1;1035:8;;;874:176;;;;:::o;248:361:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;", "srcmap-runtime": "248:361:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2212:81:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4248:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3255:98;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4874:317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3114:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5586:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;411:95:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3411:117:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2406:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;512:95:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6288:266:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3731:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3961:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2212:81;2249:13;2281:5;2274:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2212:81;:::o;4248:166::-;4331:4;4347:39;4356:12;:10;:12::i;:::-;4370:7;4379:6;4347:8;:39::i;:::-;4403:4;4396:11;;4248:166;;;;:::o;3255:98::-;3308:7;3334:12;;3327:19;;3255:98;:::o;4874:317::-;4980:4;4996:36;5006:6;5014:9;5025:6;4996:9;:36::i;:::-;5042:121;5051:6;5059:12;:10;:12::i;:::-;5073:89;5111:6;5073:89;;;;;;;;;;;;;;;;;:11;:19;5085:6;5073:19;;;;;;;;;;;;;;;:33;5093:12;:10;:12::i;:::-;5073:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5042:8;:121::i;:::-;5180:4;5173:11;;4874:317;;;;;:::o;3114:81::-;3155:5;3179:9;;;;;;;;;;;3172:16;;3114:81;:::o;5586:215::-;5674:4;5690:83;5699:12;:10;:12::i;:::-;5713:7;5722:50;5761:10;5722:11;:25;5734:12;:10;:12::i;:::-;5722:25;;;;;;;;;;;;;;;:34;5748:7;5722:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5690:8;:83::i;:::-;5790:4;5783:11;;5586:215;;;;:::o;411:95:7:-;477:22;483:7;492:6;477:5;:22::i;:::-;411:95;;:::o;3411:117:2:-;3477:7;3503:9;:18;3513:7;3503:18;;;;;;;;;;;;;;;;3496:25;;3411:117;;;:::o;2406:85::-;2445:13;2477:7;2470:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2406:85;:::o;512:95:7:-;578:22;584:7;593:6;578:5;:22::i;:::-;512:95;;:::o;6288:266:2:-;6381:4;6397:129;6406:12;:10;:12::i;:::-;6420:7;6429:96;6468:15;6429:96;;;;;;;;;;;;;;;;;:11;:25;6441:12;:10;:12::i;:::-;6429:25;;;;;;;;;;;;;;;:34;6455:7;6429:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6397:8;:129::i;:::-;6543:4;6536:11;;6288:266;;;;:::o;3731:172::-;3817:4;3833:42;3843:12;:10;:12::i;:::-;3857:9;3868:6;3833:9;:42::i;:::-;3892:4;3885:11;;3731:172;;;;:::o;3961:149::-;4050:7;4076:11;:18;4088:5;4076:18;;;;;;;;;;;;;;;:27;4095:7;4076:27;;;;;;;;;;;;;;;;4069:34;;3961:149;;;;:::o;874:176:1:-;932:7;951:9;967:1;963;:5;951:17;;991:1;986;:6;;978:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1042:1;1035:8;;;874:176;;;;:::o;590:104:0:-;643:15;677:10;670:17;;590:104;:::o;9350:340:2:-;9468:1;9451:19;;:5;:19;;;;9443:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9548:1;9529:21;;:7;:21;;;;9521:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9630:6;9600:11;:18;9612:5;9600:18;;;;;;;;;;;;;;;:27;9619:7;9600:27;;;;;;;;;;;;;;;:36;;;;9667:7;9651:32;;9660:5;9651:32;;;9676:6;9651:32;;;;;;;;;;;;;;;;;;9350:340;;;:::o;7028:530::-;7151:1;7133:20;;:6;:20;;;;7125:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7234:1;7213:23;;:9;:23;;;;7205:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7287:47;7308:6;7316:9;7327:6;7287:20;:47::i;:::-;7365:71;7387:6;7365:71;;;;;;;;;;;;;;;;;:9;:17;7375:6;7365:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7345:9;:17;7355:6;7345:17;;;;;;;;;;;;;;;:91;;;;7469:32;7494:6;7469:9;:20;7479:9;7469:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7446:9;:20;7456:9;7446:20;;;;;;;;;;;;;;;:55;;;;7533:9;7516:35;;7525:6;7516:35;;;7544:6;7516:35;;;;;;;;;;;;;;;;;;7028:530;;;:::o;1746:187:1:-;1832:7;1864:1;1859;:6;;1867:12;1851:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1890:9;1906:1;1902;:5;1890:17;;1925:1;1918:8;;;1746:187;;;;;:::o;7828:370:2:-;7930:1;7911:21;;:7;:21;;;;7903:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7979:49;8008:1;8012:7;8021:6;7979:20;:49::i;:::-;8054:24;8071:6;8054:12;;:16;;:24;;;;:::i;:::-;8039:12;:39;;;;8109:30;8132:6;8109:9;:18;8119:7;8109:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;8088:9;:18;8098:7;8088:18;;;;;;;;;;;;;;;:51;;;;8175:7;8154:37;;8171:1;8154:37;;;8184:6;8154:37;;;;;;;;;;;;;;;;;;7828:370;;:::o;8517:410::-;8619:1;8600:21;;:7;:21;;;;8592:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8670:49;8691:7;8708:1;8712:6;8670:20;:49::i;:::-;8751:68;8774:6;8751:68;;;;;;;;;;;;;;;;;:9;:18;8761:7;8751:18;;;;;;;;;;;;;;;;:22;;:68;;;;;:::i;:::-;8730:9;:18;8740:7;8730:18;;;;;;;;;;;;;;;:89;;;;8844:24;8861:6;8844:12;;:16;;:24;;;;:::i;:::-;8829:12;:39;;;;8909:1;8883:37;;8892:7;8883:37;;;8913:6;8883:37;;;;;;;;;;;;;;;;;;8517:410;;:::o;10688:92::-;;;;:::o;1321:134:1:-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1398:50;;1321:134;;;;:::o", "abi": "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "bin": "60806040523480156200001157600080fd5b5060405162001b3738038062001b37833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b838201915060208201858111156200012c57600080fd5b82518660018202830111640100000000821117156200014a57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018057808201518184015260208101905062000163565b50505050905090810190601f168015620001ae5780820380516001836020036101000a031916815260200191505b5060405250505081818160039080519060200190620001cf92919062000497565b508060049080519060200190620001e892919062000497565b506012600560006101000a81548160ff021916908360ff1602179055505050620002233369d3c21bcecceda10000006200022b60201b60201c565b50506200054d565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620002cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b620002e3600083836200040960201b60201c565b620002ff816002546200040e60201b62000a7e1790919060201c565b6002819055506200035d816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546200040e60201b62000a7e1790919060201c565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b505050565b6000808284019050838110156200048d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620004cf57600085556200051b565b82601f10620004ea57805160ff19168380011785556200051b565b828001600101855582156200051b579182015b828111156200051a578251825591602001919060010190620004fd565b5b5090506200052a91906200052e565b5090565b5b80821115620005495760008160009055506001016200052f565b5090565b6115da806200055d6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806340c10f191161008c5780639dc29fac116100665780639dc29fac1461040b578063a457c2d714610459578063a9059cbb146104bd578063dd62ed3e14610521576100cf565b806340c10f19146102e257806370a082311461033057806395d89b4114610388576100cf565b806306fdde03146100d4578063095ea7b31461015757806318160ddd146101bb57806323b872dd146101d9578063313ce5671461025d578063395093511461027e575b600080fd5b6100dc610599565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561011c578082015181840152602081019050610101565b50505050905090810190601f1680156101495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561016d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061063b565b60405180821515815260200191505060405180910390f35b6101c3610659565b6040518082815260200191505060405180910390f35b610245600480360360608110156101ef57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610663565b60405180821515815260200191505060405180910390f35b61026561073c565b604051808260ff16815260200191505060405180910390f35b6102ca6004803603604081101561029457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610753565b60405180821515815260200191505060405180910390f35b61032e600480360360408110156102f857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610806565b005b6103726004803603602081101561034657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610814565b6040518082815260200191505060405180910390f35b61039061085c565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103d05780820151818401526020810190506103b5565b50505050905090810190601f1680156103fd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104576004803603604081101561042157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108fe565b005b6104a56004803603604081101561046f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061090c565b60405180821515815260200191505060405180910390f35b610509600480360360408110156104d357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506109d9565b60405180821515815260200191505060405180910390f35b6105836004803603604081101561053757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109f7565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106315780601f1061060657610100808354040283529160200191610631565b820191906000526020600020905b81548152906001019060200180831161061457829003601f168201915b5050505050905090565b600061064f610648610b06565b8484610b0e565b6001905092915050565b6000600254905090565b6000610670848484610d05565b6107318461067c610b06565b61072c856040518060600160405280602881526020016114ee60289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006106e2610b06565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fc69092919063ffffffff16565b610b0e565b600190509392505050565b6000600560009054906101000a900460ff16905090565b60006107fc610760610b06565b846107f78560016000610771610b06565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a7e90919063ffffffff16565b610b0e565b6001905092915050565b6108108282611086565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108f45780601f106108c9576101008083540402835291602001916108f4565b820191906000526020600020905b8154815290600101906020018083116108d757829003601f168201915b5050505050905090565b610908828261124d565b5050565b60006109cf610919610b06565b846109ca856040518060600160405280602581526020016115806025913960016000610943610b06565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fc69092919063ffffffff16565b610b0e565b6001905092915050565b60006109ed6109e6610b06565b8484610d05565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080828401905083811015610afc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b94576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061155c6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c1a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806114a66022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d8b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806115376025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e11576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806114616023913960400191505060405180910390fd5b610e1c838383611411565b610e87816040518060600160405280602681526020016114c8602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fc69092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610f1a816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a7e90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290611073576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561103857808201518184015260208101905061101d565b50505050905090810190601f1680156110655780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611129576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b61113560008383611411565b61114a81600254610a7e90919063ffffffff16565b6002819055506111a1816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a7e90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156112d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806115166021913960400191505060405180910390fd5b6112df82600083611411565b61134a81604051806060016040528060228152602001611484602291396000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fc69092919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506113a18160025461141690919063ffffffff16565b600281905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b505050565b600061145883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610fc6565b90509291505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212201dd979c79456d218566e72fe79b822f18f7fb01b5fb2732cad9451ca6e52733e64736f6c63430007060033", "bin-runtime": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c806340c10f191161008c5780639dc29fac116100665780639dc29fac1461040b578063a457c2d714610459578063a9059cbb146104bd578063dd62ed3e14610521576100cf565b806340c10f19146102e257806370a082311461033057806395d89b4114610388576100cf565b806306fdde03146100d4578063095ea7b31461015757806318160ddd146101bb57806323b872dd146101d9578063313ce5671461025d578063395093511461027e575b600080fd5b6100dc610599565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561011c578082015181840152602081019050610101565b50505050905090810190601f1680156101495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561016d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061063b565b60405180821515815260200191505060405180910390f35b6101c3610659565b6040518082815260200191505060405180910390f35b610245600480360360608110156101ef57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610663565b60405180821515815260200191505060405180910390f35b61026561073c565b604051808260ff16815260200191505060405180910390f35b6102ca6004803603604081101561029457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610753565b60405180821515815260200191505060405180910390f35b61032e600480360360408110156102f857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610806565b005b6103726004803603602081101561034657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610814565b6040518082815260200191505060405180910390f35b61039061085c565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103d05780820151818401526020810190506103b5565b50505050905090810190601f1680156103fd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104576004803603604081101561042157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108fe565b005b6104a56004803603604081101561046f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061090c565b60405180821515815260200191505060405180910390f35b610509600480360360408110156104d357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506109d9565b60405180821515815260200191505060405180910390f35b6105836004803603604081101561053757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109f7565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106315780601f1061060657610100808354040283529160200191610631565b820191906000526020600020905b81548152906001019060200180831161061457829003601f168201915b5050505050905090565b600061064f610648610b06565b8484610b0e565b6001905092915050565b6000600254905090565b6000610670848484610d05565b6107318461067c610b06565b61072c856040518060600160405280602881526020016114ee60289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006106e2610b06565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fc69092919063ffffffff16565b610b0e565b600190509392505050565b6000600560009054906101000a900460ff16905090565b60006107fc610760610b06565b846107f78560016000610771610b06565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a7e90919063ffffffff16565b610b0e565b6001905092915050565b6108108282611086565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108f45780601f106108c9576101008083540402835291602001916108f4565b820191906000526020600020905b8154815290600101906020018083116108d757829003601f168201915b5050505050905090565b610908828261124d565b5050565b60006109cf610919610b06565b846109ca856040518060600160405280602581526020016115806025913960016000610943610b06565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fc69092919063ffffffff16565b610b0e565b6001905092915050565b60006109ed6109e6610b06565b8484610d05565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080828401905083811015610afc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b94576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061155c6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c1a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806114a66022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d8b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806115376025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e11576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806114616023913960400191505060405180910390fd5b610e1c838383611411565b610e87816040518060600160405280602681526020016114c8602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fc69092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610f1a816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a7e90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290611073576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561103857808201518184015260208101905061101d565b50505050905090810190601f1680156110655780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611129576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b61113560008383611411565b61114a81600254610a7e90919063ffffffff16565b6002819055506111a1816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a7e90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156112d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806115166021913960400191505060405180910390fd5b6112df82600083611411565b61134a81604051806060016040528060228152602001611484602291396000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fc69092919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506113a18160025461141690919063ffffffff16565b600281905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b505050565b600061145883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610fc6565b90509291505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212201dd979c79456d218566e72fe79b822f18f7fb01b5fb2732cad9451ca6e52733e64736f6c63430007060033", "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {"allowance(address,address)": {"author": null, "details": "See {IERC20-allowance}.", "params": {}, "return": null}, "approve(address,uint256)": {"author": null, "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.", "params": {}, "return": null}, "balanceOf(address)": {"author": null, "details": "See {IERC20-balanceOf}.", "params": {}, "return": null}, "decimals()": {"author": null, "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.", "params": {}, "return": null}, "decreaseAllowance(address,uint256)": {"author": null, "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.", "params": {}, "return": null}, "increaseAllowance(address,uint256)": {"author": null, "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.", "params": {}, "return": null}, "name()": {"author": null, "details": "Returns the name of the token.", "params": {}, "return": null}, "symbol()": {"author": null, "details": "Returns the symbol of the token, usually a shorter version of the name.", "params": {}, "return": null}, "totalSupply()": {"author": null, "details": "See {IERC20-totalSupply}.", "params": {}, "return": null}, "transfer(address,uint256)": {"author": null, "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.", "params": {}, "return": null}, "transferFrom(address,address,uint256)": {"author": null, "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.", "params": {}, "return": null}}, "author": null, "details": null, "title": null}}}}